GRAMMAR
(0, 'START', 'S')
(1, 'S', 'enchanto { SN }')
(2, 'SN', 'SN N ;')
(3, 'SN', 'N ;')
(4, 'N', 'IN')
(5, 'N', 'OUT')
(6, 'N', 'DECL')
(7, 'N', 'UNARY')
(8, 'N', 'ASSIGN')
(9, 'N', 'IFBLOCK')
(10, 'N', 'FORBLOCK')
(11, 'N', 'WHILEBLOCK')
(12, 'IFBLOCK', 'IFB ELIFB ELSEB')
(13, 'IFBLOCK', 'IFB ELIFB')
(14, 'IFBLOCK', 'IFB ELSEB')
(15, 'IFBLOCK', 'IFB')
(16, 'IFB', 'mystime LOGICAL du { BLOCK }')
(17, 'ELIFB', 'ELIFBC ELIFB')
(18, 'ELIFB', 'ELIFBC')
(19, 'ELIFBC', 'turntime LOGICAL du { BLOCK }')
(20, 'ELSEB', 'returntime du { BLOCK }')
(21, 'FORBLOCK', 'forculus FFROM tu FTO du { BLOCK }')
(22, 'FFROM', 'SAASIGN')
(23, 'FFROM', 'variable')
(24, 'SAASIGN', 'variable = SRHS')
(25, 'SRHS', 'TNV')
(26, 'SRHS', 'EXPR')
(27, 'FTO', 'TNV')
(28, 'FTO', 'EXPR')
(29, 'WHILEBLOCK', 'whilegardium LOGICAL du { BLOCK }')
(30, 'BLOCK', 'SN')
(31, 'TERNARY', 'tribus LOGICAL ? OPTION : OPTION')
(32, 'OPTION', 'EDT')
(33, 'OPTION', 'EXPR')
(34, 'EXPR', 'SS')
(35, 'SS', 'SS + TSV')
(36, 'SS', 'TSV')
(37, 'EXPR', 'EXPR NOP TERM')
(38, 'EXPR', 'TERM')
(39, 'NOP', '+')
(40, 'NOP', '-')
(41, 'NOP', '%')
(42, 'TERM', 'TERM FOP FACTOR')
(43, 'TERM', 'FACTOR')
(44, 'FOP', '*')
(45, 'FOP', '/')
(46, 'FACTOR', 'TNV')
(47, 'FACTOR', '( EXPR )')
(48, 'EXPR', 'LOGICAL')
(49, 'LOGICAL', 'LOGICAL LOP ER')
(50, 'LOGICAL', 'ER')
(51, 'LOP', 'andus')
(52, 'LOP', 'orus')
(53, 'LOP', 'notus')
(54, 'ER', 'ER ROP R')
(55, 'ER', 'R')
(56, 'ROP', '==')
(57, 'ROP', '!=')
(58, 'ROP', '>')
(59, 'ROP', '<')
(60, 'ROP', '>=')
(61, 'ROP', '<=')
(62, 'R', '( LOGICAL )')
(63, 'R', 'EDT')
(64, 'R', '( EXPR )')
(65, 'ASSIGN', 'LHS = RHS')
(66, 'LHS', 'variable')
(67, 'LHS', 'variable [ TNV ]')
(68, 'RHS', 'ARRAY')
(69, 'RHS', 'ARRAYELEM')
(70, 'RHS', 'TERNARY')
(71, 'RHS', 'EDT')
(72, 'RHS', 'EXPR')
(73, 'ARRAY', '[ AELEM ]')
(74, 'AELEM', 'TNV , AELEM')
(75, 'AELEM', 'TNV')
(76, 'ARRAYELEM', 'variable [ TNV ]')
(77, 'DECL', 'declaro EDDT SV')
(78, 'SV', 'SV variable')
(79, 'SV', 'variable')
(80, 'EDDT', 'DDT')
(81, 'EDDT', 'DARRAY')
(82, 'DDT', 'incantum')
(83, 'DDT', 'dublatum')
(84, 'DDT', 'charmax')
(85, 'DDT', 'stringo')
(86, 'DARRAY', 'arraygo [ TNV ] DDT')
(87, 'UNARY', 'ascendo variable')
(88, 'UNARY', 'descendo variable')
(89, 'IN', 'scriptum INOPTIONS')
(90, 'INOPTIONS', 'variable')
(91, 'INOPTIONS', 'ARRAYELEM')
(92, 'OUT', 'revelio OUTOPTIONS')
(93, 'OUTOPTIONS', 'EDT')
(94, 'OUTOPTIONS', 'ARRAYELEM')
(95, 'TNV', 'number')
(96, 'TNV', 'variable')
(97, 'TSV', 'string')
(98, 'TSV', 'variable')
(99, 'EDT', 'DT')
(100, 'EDT', 'variable')
(101, 'DT', 'number')
(102, 'DT', 'char')
(103, 'DT', 'string')

FIRST SETS
START: {'enchanto'}
S: {'enchanto'}
SN: {'variable', 'whilegardium', 'descendo', 'forculus', 'mystime', 'declaro', 'ascendo', 'scriptum', 'revelio'}
N: {'variable', 'whilegardium', 'descendo', 'forculus', 'mystime', 'declaro', 'ascendo', 'scriptum', 'revelio'}
IN: {'scriptum'}
OUT: {'revelio'}
DECL: {'declaro'}
UNARY: {'descendo', 'ascendo'}
ASSIGN: {'variable'}
IFBLOCK: {'mystime'}
FORBLOCK: {'forculus'}
WHILEBLOCK: {'whilegardium'}
IFB: {'mystime'}
ELIFB: {'turntime'}
ELSEB: {'returntime'}
LOGICAL: {'variable', 'char', 'string', '(', 'number'}
BLOCK: {'variable', 'whilegardium', 'descendo', 'forculus', 'mystime', 'declaro', 'ascendo', 'scriptum', 'revelio'}
ELIFBC: {'turntime'}
FFROM: {'variable'}
FTO: {'variable', 'char', 'string', '(', 'number'}
SAASIGN: {'variable'}
SRHS: {'variable', 'char', 'string', '(', 'number'}
TNV: {'variable', 'number'}
EXPR: {'variable', 'char', 'string', '(', 'number'}
TERNARY: {'tribus'}
OPTION: {'variable', 'char', 'string', '(', 'number'}
EDT: {'variable', 'string', 'number', 'char'}
SS: {'variable', 'string'}
TSV: {'variable', 'string'}
NOP: {'%', '+', '-'}
TERM: {'(', 'number', 'variable'}
FOP: {'/', '*'}
FACTOR: {'(', 'number', 'variable'}
LOP: {'andus', 'notus', 'orus'}
ER: {'variable', 'char', 'string', '(', 'number'}
ROP: {'<=', '>=', '==', '<', '>', '!='}
R: {'variable', 'char', 'string', '(', 'number'}
LHS: {'variable'}
RHS: {'variable', 'char', 'string', '(', 'tribus', 'number', '['}
ARRAY: {'['}
ARRAYELEM: {'variable'}
AELEM: {'variable', 'number'}
EDDT: {'charmax', 'stringo', 'arraygo', 'incantum', 'dublatum'}
SV: {'variable'}
DDT: {'dublatum', 'charmax', 'stringo', 'incantum'}
DARRAY: {'arraygo'}
INOPTIONS: {'variable'}
OUTOPTIONS: {'variable', 'string', 'number', 'char'}
DT: {'string', 'number', 'char'}

FOLLOW SETS
START: {'#'}
S: {'#'}
SN: {'variable', 'whilegardium', 'descendo', 'forculus', 'mystime', '}', 'declaro', 'ascendo', 'scriptum', 'revelio'}
N: {';'}
IFBLOCK: {';'}
IFB: {';', 'turntime', 'returntime'}
ELIFB: {';', 'returntime'}
ELIFBC: {';', 'turntime', 'returntime'}
ELSEB: {';'}
FORBLOCK: {';'}
FFROM: {'tu'}
SAASIGN: {'tu'}
SRHS: {'tu'}
FTO: {'du'}
WHILEBLOCK: {';'}
BLOCK: {'}'}
TERNARY: {';'}
OPTION: {';', ':'}
EXPR: {';', ')', '%', '+', 'tu', ':', '-', 'du'}
SS: {';', ')', '%', '+', 'tu', ':', '-', 'du'}
NOP: {'(', 'number', 'variable'}
TERM: {';', ')', '%', '+', '/', 'tu', ':', '-', 'du', '*'}
FOP: {'(', 'number', 'variable'}
FACTOR: {')', '+', '/', 'tu', ':', 'du', ';', '%', '-', '*'}
LOGICAL: {';', ')', '?', '%', '+', 'orus', 'andus', 'tu', ':', '-', 'notus', 'du'}
LOP: {'variable', '(', 'char', 'number', 'string'}
ER: {';', ')', '<=', '?', '>=', '+', 'orus', '%', '-', 'andus', '==', '<', '>', 'tu', ':', 'notus', '!=', 'du'}
ROP: {'variable', '(', 'char', 'number', 'string'}
R: {')', '+', 'orus', '==', 'andus', 'tu', ':', '!=', 'du', ';', '<=', '?', '>=', '%', '<', '>', 'notus', '-'}
ASSIGN: {';'}
LHS: {'='}
RHS: {';'}
ARRAY: {';'}
AELEM: {']'}
ARRAYELEM: {';'}
DECL: {';'}
SV: {';', 'variable'}
EDDT: {'variable'}
DDT: {'variable'}
DARRAY: {'variable'}
UNARY: {';'}
IN: {';'}
INOPTIONS: {';'}
OUT: {';'}
OUTOPTIONS: {';'}
TNV: {';', ')', '+', '%', '/', ',', ']', 'tu', ':', '-', 'du', '*'}
TSV: {';', ')', '%', '+', 'tu', ':', '-', 'du'}
EDT: {')', '+', 'orus', '==', 'andus', 'tu', ':', '!=', 'du', ';', '<=', '?', '>=', '%', '<', '>', 'notus', '-'}
DT: {')', '+', 'orus', '==', 'andus', 'tu', ':', '!=', 'du', ';', '<=', '?', '>=', '%', '<', '>', 'notus', '-'}

STATES:
State 0 = goto(None, None) 
	START -> . S
	S -> . enchanto { SN }
	SN -> . SN N ;
	SN -> . N ;
	N -> . IN
	N -> . OUT
	N -> . DECL
	N -> . UNARY
	N -> . ASSIGN
	N -> . IFBLOCK
	N -> . FORBLOCK
	N -> . WHILEBLOCK
	IFBLOCK -> . IFB ELIFB ELSEB
	IFBLOCK -> . IFB ELIFB
	IFBLOCK -> . IFB ELSEB
	IFBLOCK -> . IFB
	IFB -> . mystime LOGICAL du { BLOCK }
	ELIFB -> . ELIFBC ELIFB
	ELIFB -> . ELIFBC
	ELIFBC -> . turntime LOGICAL du { BLOCK }
	ELSEB -> . returntime du { BLOCK }
	FORBLOCK -> . forculus FFROM tu FTO du { BLOCK }
	FFROM -> . SAASIGN
	FFROM -> . variable
	SAASIGN -> . variable = SRHS
	SRHS -> . TNV
	SRHS -> . EXPR
	FTO -> . TNV
	FTO -> . EXPR
	WHILEBLOCK -> . whilegardium LOGICAL du { BLOCK }
	BLOCK -> . SN
	TERNARY -> . tribus LOGICAL ? OPTION : OPTION
	OPTION -> . EDT
	OPTION -> . EXPR
	EXPR -> . SS
	SS -> . SS + TSV
	SS -> . TSV
	EXPR -> . EXPR NOP TERM
	EXPR -> . TERM
	NOP -> . +
	NOP -> . -
	NOP -> . %
	TERM -> . TERM FOP FACTOR
	TERM -> . FACTOR
	FOP -> . *
	FOP -> . /
	FACTOR -> . TNV
	FACTOR -> . ( EXPR )
	EXPR -> . LOGICAL
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	LOP -> . andus
	LOP -> . orus
	LOP -> . notus
	ER -> . ER ROP R
	ER -> . R
	ROP -> . ==
	ROP -> . !=
	ROP -> . >
	ROP -> . <
	ROP -> . >=
	ROP -> . <=
	R -> . ( LOGICAL )
	R -> . EDT
	R -> . ( EXPR )
	ASSIGN -> . LHS = RHS
	LHS -> . variable
	LHS -> . variable [ TNV ]
	RHS -> . ARRAY
	RHS -> . ARRAYELEM
	RHS -> . TERNARY
	RHS -> . EDT
	RHS -> . EXPR
	ARRAY -> . [ AELEM ]
	AELEM -> . TNV , AELEM
	AELEM -> . TNV
	ARRAYELEM -> . variable [ TNV ]
	DECL -> . declaro EDDT SV
	SV -> . SV variable
	SV -> . variable
	EDDT -> . DDT
	EDDT -> . DARRAY
	DDT -> . incantum
	DDT -> . dublatum
	DDT -> . charmax
	DDT -> . stringo
	DARRAY -> . arraygo [ TNV ] DDT
	UNARY -> . ascendo variable
	UNARY -> . descendo variable
	IN -> . scriptum INOPTIONS
	INOPTIONS -> . variable
	INOPTIONS -> . ARRAYELEM
	OUT -> . revelio OUTOPTIONS
	OUTOPTIONS -> . EDT
	OUTOPTIONS -> . ARRAYELEM
	TNV -> . number
	TNV -> . variable
	TSV -> . string
	TSV -> . variable
	EDT -> . DT
	EDT -> . variable
	DT -> . number
	DT -> . char
	DT -> . string

	Actions:
	for S: Shift s1
	for enchanto: Shift s2
	for SN: Shift s3
	for N: Shift s4
	for IN: Shift s5
	for OUT: Shift s6
	for DECL: Shift s7
	for UNARY: Shift s8
	for ASSIGN: Shift s9
	for IFBLOCK: Shift s10
	for FORBLOCK: Shift s11
	for WHILEBLOCK: Shift s12
	for IFB: Shift s13
	for mystime: Shift s14
	for ELIFBC: Shift s15
	for turntime: Shift s16
	for returntime: Shift s17
	for forculus: Shift s18
	for SAASIGN: Shift s19
	for variable: Shift s20
	for TNV: Shift s21
	for EXPR: Shift s22
	for whilegardium: Shift s23
	for tribus: Shift s24
	for EDT: Shift s25
	for SS: Shift s26
	for TSV: Shift s27
	for TERM: Shift s28
	for +: Shift s29
	for -: Shift s30
	for %: Shift s31
	for FACTOR: Shift s32
	for *: Shift s33
	for /: Shift s34
	for (: Shift s35
	for LOGICAL: Shift s36
	for ER: Shift s37
	for andus: Shift s38
	for orus: Shift s39
	for notus: Shift s40
	for R: Shift s41
	for ==: Shift s42
	for !=: Shift s43
	for >: Shift s44
	for <: Shift s45
	for >=: Shift s46
	for <=: Shift s47
	for LHS: Shift s48
	for ARRAY: Shift s49
	for ARRAYELEM: Shift s50
	for TERNARY: Shift s51
	for [: Shift s52
	for declaro: Shift s53
	for SV: Shift s54
	for DDT: Shift s55
	for DARRAY: Shift s56
	for incantum: Shift s57
	for dublatum: Shift s58
	for charmax: Shift s59
	for stringo: Shift s60
	for arraygo: Shift s61
	for ascendo: Shift s62
	for descendo: Shift s63
	for scriptum: Shift s64
	for revelio: Shift s65
	for number: Shift s66
	for string: Shift s67
	for DT: Shift s68
	for char: Shift s69

State 1 = goto(0, S) 
	START -> S .

	Actions:
	for #: Accept acc

State 2 = goto(0, enchanto) 
	S -> enchanto . { SN }

	Actions:
	for {: Shift s70

State 3 = goto(0, SN) 
	SN -> SN . N ;
	N -> . IN
	IN -> . scriptum INOPTIONS
	N -> . OUT
	OUT -> . revelio OUTOPTIONS
	N -> . DECL
	DECL -> . declaro EDDT SV
	N -> . UNARY
	UNARY -> . ascendo variable
	UNARY -> . descendo variable
	N -> . ASSIGN
	ASSIGN -> . LHS = RHS
	LHS -> . variable
	LHS -> . variable [ TNV ]
	N -> . IFBLOCK
	IFBLOCK -> . IFB ELIFB ELSEB
	IFB -> . mystime LOGICAL du { BLOCK }
	IFBLOCK -> . IFB ELIFB
	IFBLOCK -> . IFB ELSEB
	IFBLOCK -> . IFB
	N -> . FORBLOCK
	FORBLOCK -> . forculus FFROM tu FTO du { BLOCK }
	N -> . WHILEBLOCK
	WHILEBLOCK -> . whilegardium LOGICAL du { BLOCK }
	BLOCK -> SN .

	Actions:
	for N: Shift s71
	for IN: Shift s5
	for scriptum: Shift s64
	for OUT: Shift s6
	for revelio: Shift s65
	for DECL: Shift s7
	for declaro: Shift s53
	for UNARY: Shift s8
	for ascendo: Shift s62
	for descendo: Shift s63
	for ASSIGN: Shift s9
	for LHS: Shift s48
	for variable: Shift s83
	for IFBLOCK: Shift s10
	for IFB: Shift s13
	for mystime: Shift s14
	for FORBLOCK: Shift s11
	for forculus: Shift s18
	for WHILEBLOCK: Shift s12
	for whilegardium: Shift s23
	for }: Reduce r30

State 4 = goto(0, N) 
	SN -> N . ;

	Actions:
	for ;: Shift s91

State 5 = goto(0, IN) 
	N -> IN .

	Actions:
	for ;: Reduce r4

State 6 = goto(0, OUT) 
	N -> OUT .

	Actions:
	for ;: Reduce r5

State 7 = goto(0, DECL) 
	N -> DECL .

	Actions:
	for ;: Reduce r6

State 8 = goto(0, UNARY) 
	N -> UNARY .

	Actions:
	for ;: Reduce r7

State 9 = goto(0, ASSIGN) 
	N -> ASSIGN .

	Actions:
	for ;: Reduce r8

State 10 = goto(0, IFBLOCK) 
	N -> IFBLOCK .

	Actions:
	for ;: Reduce r9

State 11 = goto(0, FORBLOCK) 
	N -> FORBLOCK .

	Actions:
	for ;: Reduce r10

State 12 = goto(0, WHILEBLOCK) 
	N -> WHILEBLOCK .

	Actions:
	for ;: Reduce r11

State 13 = goto(0, IFB) 
	IFBLOCK -> IFB . ELIFB ELSEB
	ELIFB -> . ELIFBC ELIFB
	ELIFBC -> . turntime LOGICAL du { BLOCK }
	ELIFB -> . ELIFBC
	IFBLOCK -> IFB . ELIFB
	IFBLOCK -> IFB . ELSEB
	ELSEB -> . returntime du { BLOCK }
	IFBLOCK -> IFB .

	Actions:
	for ELIFB: Shift s92
	for ELIFBC: Shift s15
	for turntime: Shift s16
	for ELSEB: Shift s95
	for returntime: Shift s17
	for ;: Reduce r15

State 14 = goto(0, mystime) 
	IFB -> mystime . LOGICAL du { BLOCK }
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	R -> . ( EXPR )

	Actions:
	for LOGICAL: Shift s97
	for ER: Shift s37
	for R: Shift s41
	for (: Shift s100
	for EDT: Shift s101
	for DT: Shift s68
	for number: Shift s103
	for char: Shift s69
	for string: Shift s105
	for variable: Shift s106

State 15 = goto(0, ELIFBC) 
	ELIFB -> ELIFBC . ELIFB
	ELIFB -> . ELIFBC ELIFB
	ELIFBC -> . turntime LOGICAL du { BLOCK }
	ELIFB -> . ELIFBC
	ELIFB -> ELIFBC .

	Actions:
	for ELIFB: Shift s107
	for ELIFBC: Shift s15
	for turntime: Shift s16
	for ;: Reduce r18
	for returntime: Reduce r18

State 16 = goto(0, turntime) 
	ELIFBC -> turntime . LOGICAL du { BLOCK }
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	R -> . ( EXPR )

	Actions:
	for LOGICAL: Shift s110
	for ER: Shift s37
	for R: Shift s41
	for (: Shift s100
	for EDT: Shift s101
	for DT: Shift s68
	for number: Shift s103
	for char: Shift s69
	for string: Shift s105
	for variable: Shift s106

State 17 = goto(0, returntime) 
	ELSEB -> returntime . du { BLOCK }

	Actions:
	for du: Shift s120

State 18 = goto(0, forculus) 
	FORBLOCK -> forculus . FFROM tu FTO du { BLOCK }
	FFROM -> . SAASIGN
	SAASIGN -> . variable = SRHS
	FFROM -> . variable

	Actions:
	for FFROM: Shift s121
	for SAASIGN: Shift s19
	for variable: Shift s123

State 19 = goto(0, SAASIGN) 
	FFROM -> SAASIGN .

	Actions:
	for tu: Reduce r22

State 20 = goto(0, variable) 
	FFROM -> variable .
	SAASIGN -> variable . = SRHS
	LHS -> variable .
	LHS -> variable . [ TNV ]
	ARRAYELEM -> variable . [ TNV ]
	SV -> variable .
	INOPTIONS -> variable .
	TNV -> variable .
	TSV -> variable .
	EDT -> variable .

	Actions:
	for =: Reduce r66
	for [: Shift s125
	for tu: Reduce r100
	for ;: Reduce r100
	for variable: Reduce r79
	for ): Reduce r100
	for +: Reduce r100
	for %: Reduce r100
	for /: Reduce r96
	for ,: Reduce r96
	for ]: Reduce r96
	for :: Reduce r100
	for -: Reduce r100
	for du: Reduce r100
	for *: Reduce r96
	for orus: Reduce r100
	for ==: Reduce r100
	for andus: Reduce r100
	for !=: Reduce r100
	for <=: Reduce r100
	for ?: Reduce r100
	for >=: Reduce r100
	for <: Reduce r100
	for >: Reduce r100
	for notus: Reduce r100

State 21 = goto(0, TNV) 
	SRHS -> TNV .
	FTO -> TNV .
	FACTOR -> TNV .
	AELEM -> TNV . , AELEM
	AELEM -> TNV .

	Actions:
	for ,: Shift s126
	for tu: Reduce r46
	for du: Reduce r46
	for ): Reduce r46
	for +: Reduce r46
	for /: Reduce r46
	for :: Reduce r46
	for ;: Reduce r46
	for %: Reduce r46
	for -: Reduce r46
	for *: Reduce r46
	for ]: Reduce r75

State 22 = goto(0, EXPR) 
	SRHS -> EXPR .
	FTO -> EXPR .
	OPTION -> EXPR .
	EXPR -> EXPR . NOP TERM
	NOP -> . +
	NOP -> . -
	NOP -> . %
	RHS -> EXPR .

	Actions:
	for NOP: Shift s127
	for +: Shift s29
	for -: Shift s30
	for %: Shift s31
	for tu: Reduce r26
	for du: Reduce r28
	for ;: Reduce r72
	for :: Reduce r33

State 23 = goto(0, whilegardium) 
	WHILEBLOCK -> whilegardium . LOGICAL du { BLOCK }
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	R -> . ( EXPR )

	Actions:
	for LOGICAL: Shift s131
	for ER: Shift s37
	for R: Shift s41
	for (: Shift s100
	for EDT: Shift s101
	for DT: Shift s68
	for number: Shift s103
	for char: Shift s69
	for string: Shift s105
	for variable: Shift s106

State 24 = goto(0, tribus) 
	TERNARY -> tribus . LOGICAL ? OPTION : OPTION
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	R -> . ( EXPR )

	Actions:
	for LOGICAL: Shift s141
	for ER: Shift s37
	for R: Shift s41
	for (: Shift s100
	for EDT: Shift s101
	for DT: Shift s68
	for number: Shift s103
	for char: Shift s69
	for string: Shift s105
	for variable: Shift s106

State 25 = goto(0, EDT) 
	OPTION -> EDT .
	R -> EDT .
	RHS -> EDT .
	OUTOPTIONS -> EDT .

	Actions:
	for ;: Reduce r93
	for :: Reduce r63
	for ): Reduce r63
	for +: Reduce r63
	for orus: Reduce r63
	for ==: Reduce r63
	for andus: Reduce r63
	for tu: Reduce r63
	for !=: Reduce r63
	for du: Reduce r63
	for <=: Reduce r63
	for ?: Reduce r63
	for >=: Reduce r63
	for %: Reduce r63
	for <: Reduce r63
	for >: Reduce r63
	for notus: Reduce r63
	for -: Reduce r63

State 26 = goto(0, SS) 
	EXPR -> SS .
	SS -> SS . + TSV

	Actions:
	for +: Reduce r34
	for ;: Reduce r34
	for ): Reduce r34
	for %: Reduce r34
	for tu: Reduce r34
	for :: Reduce r34
	for -: Reduce r34
	for du: Reduce r34

State 27 = goto(0, TSV) 
	SS -> TSV .

	Actions:
	for ;: Reduce r36
	for ): Reduce r36
	for %: Reduce r36
	for +: Reduce r36
	for tu: Reduce r36
	for :: Reduce r36
	for -: Reduce r36
	for du: Reduce r36

State 28 = goto(0, TERM) 
	EXPR -> TERM .
	TERM -> TERM . FOP FACTOR
	FOP -> . *
	FOP -> . /

	Actions:
	for FOP: Shift s152
	for *: Shift s33
	for /: Shift s34
	for ;: Reduce r38
	for ): Reduce r38
	for %: Reduce r38
	for +: Reduce r38
	for tu: Reduce r38
	for :: Reduce r38
	for -: Reduce r38
	for du: Reduce r38

State 29 = goto(0, +) 
	NOP -> + .

	Actions:
	for (: Reduce r39
	for number: Reduce r39
	for variable: Reduce r39

State 30 = goto(0, -) 
	NOP -> - .

	Actions:
	for (: Reduce r40
	for number: Reduce r40
	for variable: Reduce r40

State 31 = goto(0, %) 
	NOP -> % .

	Actions:
	for (: Reduce r41
	for number: Reduce r41
	for variable: Reduce r41

State 32 = goto(0, FACTOR) 
	TERM -> FACTOR .

	Actions:
	for ;: Reduce r43
	for ): Reduce r43
	for %: Reduce r43
	for +: Reduce r43
	for /: Reduce r43
	for tu: Reduce r43
	for :: Reduce r43
	for -: Reduce r43
	for du: Reduce r43
	for *: Reduce r43

State 33 = goto(0, *) 
	FOP -> * .

	Actions:
	for (: Reduce r44
	for number: Reduce r44
	for variable: Reduce r44

State 34 = goto(0, /) 
	FOP -> / .

	Actions:
	for (: Reduce r45
	for number: Reduce r45
	for variable: Reduce r45

State 35 = goto(0, () 
	FACTOR -> ( . EXPR )
	EXPR -> . SS
	SS -> . SS + TSV
	SS -> . TSV
	TSV -> . string
	TSV -> . variable
	EXPR -> . EXPR NOP TERM
	EXPR -> . TERM
	TERM -> . TERM FOP FACTOR
	TERM -> . FACTOR
	FACTOR -> . TNV
	TNV -> . number
	TNV -> . variable
	FACTOR -> . ( EXPR )
	EXPR -> . LOGICAL
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	R -> . ( EXPR )
	R -> ( . LOGICAL )
	R -> ( . EXPR )

	Actions:
	for EXPR: Shift s155
	for SS: Shift s26
	for TSV: Shift s27
	for string: Shift s67
	for variable: Shift s159
	for TERM: Shift s28
	for FACTOR: Shift s32
	for TNV: Shift s162
	for number: Shift s66
	for (: Shift s35
	for LOGICAL: Shift s165
	for ER: Shift s37
	for R: Shift s41
	for EDT: Shift s101
	for DT: Shift s68
	for char: Shift s69

State 36 = goto(0, LOGICAL) 
	EXPR -> LOGICAL .
	LOGICAL -> LOGICAL . LOP ER
	LOP -> . andus
	LOP -> . orus
	LOP -> . notus

	Actions:
	for LOP: Shift s171
	for andus: Shift s38
	for orus: Shift s39
	for notus: Shift s40
	for ;: Reduce r48
	for ): Reduce r48
	for %: Reduce r48
	for +: Reduce r48
	for tu: Reduce r48
	for :: Reduce r48
	for -: Reduce r48
	for du: Reduce r48

State 37 = goto(0, ER) 
	LOGICAL -> ER .
	ER -> ER . ROP R
	ROP -> . ==
	ROP -> . !=
	ROP -> . >
	ROP -> . <
	ROP -> . >=
	ROP -> . <=

	Actions:
	for ROP: Shift s175
	for ==: Shift s42
	for !=: Shift s43
	for >: Shift s44
	for <: Shift s45
	for >=: Shift s46
	for <=: Shift s47
	for ;: Reduce r50
	for ): Reduce r50
	for ?: Reduce r50
	for %: Reduce r50
	for +: Reduce r50
	for orus: Reduce r50
	for andus: Reduce r50
	for tu: Reduce r50
	for :: Reduce r50
	for -: Reduce r50
	for notus: Reduce r50
	for du: Reduce r50

State 38 = goto(0, andus) 
	LOP -> andus .

	Actions:
	for variable: Reduce r51
	for (: Reduce r51
	for char: Reduce r51
	for number: Reduce r51
	for string: Reduce r51

State 39 = goto(0, orus) 
	LOP -> orus .

	Actions:
	for variable: Reduce r52
	for (: Reduce r52
	for char: Reduce r52
	for number: Reduce r52
	for string: Reduce r52

State 40 = goto(0, notus) 
	LOP -> notus .

	Actions:
	for variable: Reduce r53
	for (: Reduce r53
	for char: Reduce r53
	for number: Reduce r53
	for string: Reduce r53

State 41 = goto(0, R) 
	ER -> R .

	Actions:
	for ;: Reduce r55
	for ): Reduce r55
	for <=: Reduce r55
	for ?: Reduce r55
	for >=: Reduce r55
	for +: Reduce r55
	for orus: Reduce r55
	for %: Reduce r55
	for -: Reduce r55
	for andus: Reduce r55
	for ==: Reduce r55
	for <: Reduce r55
	for >: Reduce r55
	for tu: Reduce r55
	for :: Reduce r55
	for notus: Reduce r55
	for !=: Reduce r55
	for du: Reduce r55

State 42 = goto(0, ==) 
	ROP -> == .

	Actions:
	for variable: Reduce r56
	for (: Reduce r56
	for char: Reduce r56
	for number: Reduce r56
	for string: Reduce r56

State 43 = goto(0, !=) 
	ROP -> != .

	Actions:
	for variable: Reduce r57
	for (: Reduce r57
	for char: Reduce r57
	for number: Reduce r57
	for string: Reduce r57

State 44 = goto(0, >) 
	ROP -> > .

	Actions:
	for variable: Reduce r58
	for (: Reduce r58
	for char: Reduce r58
	for number: Reduce r58
	for string: Reduce r58

State 45 = goto(0, <) 
	ROP -> < .

	Actions:
	for variable: Reduce r59
	for (: Reduce r59
	for char: Reduce r59
	for number: Reduce r59
	for string: Reduce r59

State 46 = goto(0, >=) 
	ROP -> >= .

	Actions:
	for variable: Reduce r60
	for (: Reduce r60
	for char: Reduce r60
	for number: Reduce r60
	for string: Reduce r60

State 47 = goto(0, <=) 
	ROP -> <= .

	Actions:
	for variable: Reduce r61
	for (: Reduce r61
	for char: Reduce r61
	for number: Reduce r61
	for string: Reduce r61

State 48 = goto(0, LHS) 
	ASSIGN -> LHS . = RHS

	Actions:
	for =: Shift s182

State 49 = goto(0, ARRAY) 
	RHS -> ARRAY .

	Actions:
	for ;: Reduce r68

State 50 = goto(0, ARRAYELEM) 
	RHS -> ARRAYELEM .
	INOPTIONS -> ARRAYELEM .
	OUTOPTIONS -> ARRAYELEM .

	Actions:
	for ;: Reduce r94

State 51 = goto(0, TERNARY) 
	RHS -> TERNARY .

	Actions:
	for ;: Reduce r70

State 52 = goto(0, [) 
	ARRAY -> [ . AELEM ]
	AELEM -> . TNV , AELEM
	TNV -> . number
	TNV -> . variable
	AELEM -> . TNV

	Actions:
	for AELEM: Shift s183
	for TNV: Shift s184
	for number: Shift s185
	for variable: Shift s186

State 53 = goto(0, declaro) 
	DECL -> declaro . EDDT SV
	EDDT -> . DDT
	DDT -> . incantum
	DDT -> . dublatum
	DDT -> . charmax
	DDT -> . stringo
	EDDT -> . DARRAY
	DARRAY -> . arraygo [ TNV ] DDT

	Actions:
	for EDDT: Shift s187
	for DDT: Shift s55
	for incantum: Shift s57
	for dublatum: Shift s58
	for charmax: Shift s59
	for stringo: Shift s60
	for DARRAY: Shift s56
	for arraygo: Shift s61

State 54 = goto(0, SV) 
	SV -> SV . variable

	Actions:
	for variable: Shift s195

State 55 = goto(0, DDT) 
	EDDT -> DDT .

	Actions:
	for variable: Reduce r80

State 56 = goto(0, DARRAY) 
	EDDT -> DARRAY .

	Actions:
	for variable: Reduce r81

State 57 = goto(0, incantum) 
	DDT -> incantum .

	Actions:
	for variable: Reduce r82

State 58 = goto(0, dublatum) 
	DDT -> dublatum .

	Actions:
	for variable: Reduce r83

State 59 = goto(0, charmax) 
	DDT -> charmax .

	Actions:
	for variable: Reduce r84

State 60 = goto(0, stringo) 
	DDT -> stringo .

	Actions:
	for variable: Reduce r85

State 61 = goto(0, arraygo) 
	DARRAY -> arraygo . [ TNV ] DDT

	Actions:
	for [: Shift s196

State 62 = goto(0, ascendo) 
	UNARY -> ascendo . variable

	Actions:
	for variable: Shift s197

State 63 = goto(0, descendo) 
	UNARY -> descendo . variable

	Actions:
	for variable: Shift s198

State 64 = goto(0, scriptum) 
	IN -> scriptum . INOPTIONS
	INOPTIONS -> . variable
	INOPTIONS -> . ARRAYELEM
	ARRAYELEM -> . variable [ TNV ]

	Actions:
	for INOPTIONS: Shift s199
	for variable: Shift s200
	for ARRAYELEM: Shift s201

State 65 = goto(0, revelio) 
	OUT -> revelio . OUTOPTIONS
	OUTOPTIONS -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	OUTOPTIONS -> . ARRAYELEM
	ARRAYELEM -> . variable [ TNV ]

	Actions:
	for OUTOPTIONS: Shift s202
	for EDT: Shift s203
	for DT: Shift s68
	for number: Shift s103
	for char: Shift s69
	for string: Shift s105
	for variable: Shift s208
	for ARRAYELEM: Shift s209

State 66 = goto(0, number) 
	TNV -> number .
	DT -> number .

	Actions:
	for ;: Reduce r101
	for ): Reduce r101
	for +: Reduce r101
	for %: Reduce r101
	for /: Reduce r95
	for ,: Reduce r95
	for ]: Reduce r95
	for tu: Reduce r101
	for :: Reduce r101
	for -: Reduce r101
	for du: Reduce r101
	for *: Reduce r95
	for orus: Reduce r101
	for ==: Reduce r101
	for andus: Reduce r101
	for !=: Reduce r101
	for <=: Reduce r101
	for ?: Reduce r101
	for >=: Reduce r101
	for <: Reduce r101
	for >: Reduce r101
	for notus: Reduce r101

State 67 = goto(0, string) 
	TSV -> string .
	DT -> string .

	Actions:
	for ;: Reduce r103
	for ): Reduce r103
	for %: Reduce r103
	for +: Reduce r103
	for tu: Reduce r103
	for :: Reduce r103
	for -: Reduce r103
	for du: Reduce r103
	for orus: Reduce r103
	for ==: Reduce r103
	for andus: Reduce r103
	for !=: Reduce r103
	for <=: Reduce r103
	for ?: Reduce r103
	for >=: Reduce r103
	for <: Reduce r103
	for >: Reduce r103
	for notus: Reduce r103

State 68 = goto(0, DT) 
	EDT -> DT .

	Actions:
	for ): Reduce r99
	for +: Reduce r99
	for orus: Reduce r99
	for ==: Reduce r99
	for andus: Reduce r99
	for tu: Reduce r99
	for :: Reduce r99
	for !=: Reduce r99
	for du: Reduce r99
	for ;: Reduce r99
	for <=: Reduce r99
	for ?: Reduce r99
	for >=: Reduce r99
	for %: Reduce r99
	for <: Reduce r99
	for >: Reduce r99
	for notus: Reduce r99
	for -: Reduce r99

State 69 = goto(0, char) 
	DT -> char .

	Actions:
	for ): Reduce r102
	for +: Reduce r102
	for orus: Reduce r102
	for ==: Reduce r102
	for andus: Reduce r102
	for tu: Reduce r102
	for :: Reduce r102
	for !=: Reduce r102
	for du: Reduce r102
	for ;: Reduce r102
	for <=: Reduce r102
	for ?: Reduce r102
	for >=: Reduce r102
	for %: Reduce r102
	for <: Reduce r102
	for >: Reduce r102
	for notus: Reduce r102
	for -: Reduce r102

State 70 = goto(2, {) 
	S -> enchanto { . SN }
	SN -> . SN N ;
	SN -> . N ;
	N -> . IN
	IN -> . scriptum INOPTIONS
	N -> . OUT
	OUT -> . revelio OUTOPTIONS
	N -> . DECL
	DECL -> . declaro EDDT SV
	N -> . UNARY
	UNARY -> . ascendo variable
	UNARY -> . descendo variable
	N -> . ASSIGN
	ASSIGN -> . LHS = RHS
	LHS -> . variable
	LHS -> . variable [ TNV ]
	N -> . IFBLOCK
	IFBLOCK -> . IFB ELIFB ELSEB
	IFB -> . mystime LOGICAL du { BLOCK }
	IFBLOCK -> . IFB ELIFB
	IFBLOCK -> . IFB ELSEB
	IFBLOCK -> . IFB
	N -> . FORBLOCK
	FORBLOCK -> . forculus FFROM tu FTO du { BLOCK }
	N -> . WHILEBLOCK
	WHILEBLOCK -> . whilegardium LOGICAL du { BLOCK }

	Actions:
	for SN: Shift s210
	for N: Shift s4
	for IN: Shift s5
	for scriptum: Shift s64
	for OUT: Shift s6
	for revelio: Shift s65
	for DECL: Shift s7
	for declaro: Shift s53
	for UNARY: Shift s8
	for ascendo: Shift s62
	for descendo: Shift s63
	for ASSIGN: Shift s9
	for LHS: Shift s48
	for variable: Shift s83
	for IFBLOCK: Shift s10
	for IFB: Shift s13
	for mystime: Shift s14
	for FORBLOCK: Shift s11
	for forculus: Shift s18
	for WHILEBLOCK: Shift s12
	for whilegardium: Shift s23

State 71 = goto(3, N) 
	SN -> SN N . ;

	Actions:
	for ;: Shift s231

State 72 = goto(3, IN) copy of State 5

State 73 = goto(3, scriptum) copy of State 64

State 74 = goto(3, OUT) copy of State 6

State 75 = goto(3, revelio) copy of State 65

State 76 = goto(3, DECL) copy of State 7

State 77 = goto(3, declaro) copy of State 53

State 78 = goto(3, UNARY) copy of State 8

State 79 = goto(3, ascendo) copy of State 62

State 80 = goto(3, descendo) copy of State 63

State 81 = goto(3, ASSIGN) copy of State 9

State 82 = goto(3, LHS) copy of State 48

State 83 = goto(3, variable) 
	LHS -> variable .
	LHS -> variable . [ TNV ]

	Actions:
	for [: Shift s232
	for =: Reduce r66

State 84 = goto(3, IFBLOCK) copy of State 10

State 85 = goto(3, IFB) copy of State 13

State 86 = goto(3, mystime) copy of State 14

State 87 = goto(3, FORBLOCK) copy of State 11

State 88 = goto(3, forculus) copy of State 18

State 89 = goto(3, WHILEBLOCK) copy of State 12

State 90 = goto(3, whilegardium) copy of State 23

State 91 = goto(4, ;) 
	SN -> N ; .

	Actions:
	for variable: Reduce r3
	for whilegardium: Reduce r3
	for descendo: Reduce r3
	for forculus: Reduce r3
	for mystime: Reduce r3
	for }: Reduce r3
	for declaro: Reduce r3
	for ascendo: Reduce r3
	for scriptum: Reduce r3
	for revelio: Reduce r3

State 92 = goto(13, ELIFB) 
	IFBLOCK -> IFB ELIFB . ELSEB
	ELSEB -> . returntime du { BLOCK }
	IFBLOCK -> IFB ELIFB .

	Actions:
	for ELSEB: Shift s233
	for returntime: Shift s17
	for ;: Reduce r13

State 93 = goto(13, ELIFBC) copy of State 15

State 94 = goto(13, turntime) copy of State 16

State 95 = goto(13, ELSEB) 
	IFBLOCK -> IFB ELSEB .

	Actions:
	for ;: Reduce r14

State 96 = goto(13, returntime) copy of State 17

State 97 = goto(14, LOGICAL) 
	IFB -> mystime LOGICAL . du { BLOCK }
	LOGICAL -> LOGICAL . LOP ER
	LOP -> . andus
	LOP -> . orus
	LOP -> . notus

	Actions:
	for du: Shift s235
	for LOP: Shift s171
	for andus: Shift s38
	for orus: Shift s39
	for notus: Shift s40

State 98 = goto(14, ER) copy of State 37

State 99 = goto(14, R) copy of State 41

State 100 = goto(14, () 
	R -> ( . LOGICAL )
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	R -> . ( EXPR )
	R -> ( . EXPR )
	EXPR -> . SS
	SS -> . SS + TSV
	SS -> . TSV
	TSV -> . string
	TSV -> . variable
	EXPR -> . EXPR NOP TERM
	EXPR -> . TERM
	TERM -> . TERM FOP FACTOR
	TERM -> . FACTOR
	FACTOR -> . TNV
	TNV -> . number
	TNV -> . variable
	FACTOR -> . ( EXPR )
	EXPR -> . LOGICAL

	Actions:
	for LOGICAL: Shift s240
	for ER: Shift s37
	for R: Shift s41
	for (: Shift s243
	for EDT: Shift s101
	for DT: Shift s68
	for number: Shift s246
	for char: Shift s69
	for string: Shift s248
	for variable: Shift s249
	for EXPR: Shift s250
	for SS: Shift s26
	for TSV: Shift s27
	for TERM: Shift s28
	for FACTOR: Shift s32
	for TNV: Shift s162

State 101 = goto(14, EDT) 
	R -> EDT .

	Actions:
	for ): Reduce r63
	for +: Reduce r63
	for orus: Reduce r63
	for ==: Reduce r63
	for andus: Reduce r63
	for tu: Reduce r63
	for :: Reduce r63
	for !=: Reduce r63
	for du: Reduce r63
	for ;: Reduce r63
	for <=: Reduce r63
	for ?: Reduce r63
	for >=: Reduce r63
	for %: Reduce r63
	for <: Reduce r63
	for >: Reduce r63
	for notus: Reduce r63
	for -: Reduce r63

State 102 = goto(14, DT) copy of State 68

State 103 = goto(14, number) 
	DT -> number .

	Actions:
	for ): Reduce r101
	for +: Reduce r101
	for orus: Reduce r101
	for ==: Reduce r101
	for andus: Reduce r101
	for tu: Reduce r101
	for :: Reduce r101
	for !=: Reduce r101
	for du: Reduce r101
	for ;: Reduce r101
	for <=: Reduce r101
	for ?: Reduce r101
	for >=: Reduce r101
	for %: Reduce r101
	for <: Reduce r101
	for >: Reduce r101
	for notus: Reduce r101
	for -: Reduce r101

State 104 = goto(14, char) copy of State 69

State 105 = goto(14, string) 
	DT -> string .

	Actions:
	for ): Reduce r103
	for +: Reduce r103
	for orus: Reduce r103
	for ==: Reduce r103
	for andus: Reduce r103
	for tu: Reduce r103
	for :: Reduce r103
	for !=: Reduce r103
	for du: Reduce r103
	for ;: Reduce r103
	for <=: Reduce r103
	for ?: Reduce r103
	for >=: Reduce r103
	for %: Reduce r103
	for <: Reduce r103
	for >: Reduce r103
	for notus: Reduce r103
	for -: Reduce r103

State 106 = goto(14, variable) 
	EDT -> variable .

	Actions:
	for ): Reduce r100
	for +: Reduce r100
	for orus: Reduce r100
	for ==: Reduce r100
	for andus: Reduce r100
	for tu: Reduce r100
	for :: Reduce r100
	for !=: Reduce r100
	for du: Reduce r100
	for ;: Reduce r100
	for <=: Reduce r100
	for ?: Reduce r100
	for >=: Reduce r100
	for %: Reduce r100
	for <: Reduce r100
	for >: Reduce r100
	for notus: Reduce r100
	for -: Reduce r100

State 107 = goto(15, ELIFB) 
	ELIFB -> ELIFBC ELIFB .

	Actions:
	for ;: Reduce r17
	for returntime: Reduce r17

State 108 = goto(15, ELIFBC) copy of State 15

State 109 = goto(15, turntime) copy of State 16

State 110 = goto(16, LOGICAL) 
	ELIFBC -> turntime LOGICAL . du { BLOCK }
	LOGICAL -> LOGICAL . LOP ER
	LOP -> . andus
	LOP -> . orus
	LOP -> . notus

	Actions:
	for du: Shift s256
	for LOP: Shift s171
	for andus: Shift s38
	for orus: Shift s39
	for notus: Shift s40

State 111 = goto(16, ER) copy of State 37

State 112 = goto(16, R) copy of State 41

State 113 = goto(16, () copy of State 100

State 114 = goto(16, EDT) copy of State 101

State 115 = goto(16, DT) copy of State 68

State 116 = goto(16, number) copy of State 103

State 117 = goto(16, char) copy of State 69

State 118 = goto(16, string) copy of State 105

State 119 = goto(16, variable) copy of State 106

State 120 = goto(17, du) 
	ELSEB -> returntime du . { BLOCK }

	Actions:
	for {: Shift s261

State 121 = goto(18, FFROM) 
	FORBLOCK -> forculus FFROM . tu FTO du { BLOCK }

	Actions:
	for tu: Shift s262

State 122 = goto(18, SAASIGN) copy of State 19

State 123 = goto(18, variable) 
	SAASIGN -> variable . = SRHS
	FFROM -> variable .

	Actions:
	for =: Shift s124
	for tu: Reduce r23

State 124 = goto(20, =) 
	SAASIGN -> variable = . SRHS
	SRHS -> . TNV
	TNV -> . number
	TNV -> . variable
	SRHS -> . EXPR
	EXPR -> . SS
	SS -> . SS + TSV
	SS -> . TSV
	TSV -> . string
	TSV -> . variable
	EXPR -> . EXPR NOP TERM
	EXPR -> . TERM
	TERM -> . TERM FOP FACTOR
	TERM -> . FACTOR
	FACTOR -> . TNV
	FACTOR -> . ( EXPR )
	EXPR -> . LOGICAL
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	R -> . ( EXPR )

	Actions:
	for SRHS: Shift s264
	for TNV: Shift s265
	for number: Shift s66
	for variable: Shift s267
	for EXPR: Shift s268
	for SS: Shift s26
	for TSV: Shift s27
	for string: Shift s67
	for TERM: Shift s28
	for FACTOR: Shift s32
	for (: Shift s35
	for LOGICAL: Shift s36
	for ER: Shift s37
	for R: Shift s41
	for EDT: Shift s101
	for DT: Shift s68
	for char: Shift s69

State 125 = goto(20, [) 
	LHS -> variable [ . TNV ]
	TNV -> . number
	TNV -> . variable
	ARRAYELEM -> variable [ . TNV ]

	Actions:
	for TNV: Shift s281
	for number: Shift s185
	for variable: Shift s186

State 126 = goto(21, ,) 
	AELEM -> TNV , . AELEM
	AELEM -> . TNV , AELEM
	TNV -> . number
	TNV -> . variable
	AELEM -> . TNV

	Actions:
	for AELEM: Shift s284
	for TNV: Shift s184
	for number: Shift s185
	for variable: Shift s186

State 127 = goto(22, NOP) 
	EXPR -> EXPR NOP . TERM
	TERM -> . TERM FOP FACTOR
	TERM -> . FACTOR
	FACTOR -> . TNV
	TNV -> . number
	TNV -> . variable
	FACTOR -> . ( EXPR )

	Actions:
	for TERM: Shift s288
	for FACTOR: Shift s32
	for TNV: Shift s162
	for number: Shift s185
	for variable: Shift s186
	for (: Shift s293

State 128 = goto(22, +) copy of State 29

State 129 = goto(22, -) copy of State 30

State 130 = goto(22, %) copy of State 31

State 131 = goto(23, LOGICAL) 
	WHILEBLOCK -> whilegardium LOGICAL . du { BLOCK }
	LOGICAL -> LOGICAL . LOP ER
	LOP -> . andus
	LOP -> . orus
	LOP -> . notus

	Actions:
	for du: Shift s294
	for LOP: Shift s171
	for andus: Shift s38
	for orus: Shift s39
	for notus: Shift s40

State 132 = goto(23, ER) copy of State 37

State 133 = goto(23, R) copy of State 41

State 134 = goto(23, () copy of State 100

State 135 = goto(23, EDT) copy of State 101

State 136 = goto(23, DT) copy of State 68

State 137 = goto(23, number) copy of State 103

State 138 = goto(23, char) copy of State 69

State 139 = goto(23, string) copy of State 105

State 140 = goto(23, variable) copy of State 106

State 141 = goto(24, LOGICAL) 
	TERNARY -> tribus LOGICAL . ? OPTION : OPTION
	LOGICAL -> LOGICAL . LOP ER
	LOP -> . andus
	LOP -> . orus
	LOP -> . notus

	Actions:
	for ?: Shift s299
	for LOP: Shift s171
	for andus: Shift s38
	for orus: Shift s39
	for notus: Shift s40

State 142 = goto(24, ER) copy of State 37

State 143 = goto(24, R) copy of State 41

State 144 = goto(24, () copy of State 100

State 145 = goto(24, EDT) copy of State 101

State 146 = goto(24, DT) copy of State 68

State 147 = goto(24, number) copy of State 103

State 148 = goto(24, char) copy of State 69

State 149 = goto(24, string) copy of State 105

State 150 = goto(24, variable) copy of State 106

State 151 = goto(26, +) 
	SS -> SS + . TSV
	TSV -> . string
	TSV -> . variable

	Actions:
	for TSV: Shift s304
	for string: Shift s305
	for variable: Shift s306

State 152 = goto(28, FOP) 
	TERM -> TERM FOP . FACTOR
	FACTOR -> . TNV
	TNV -> . number
	TNV -> . variable
	FACTOR -> . ( EXPR )

	Actions:
	for FACTOR: Shift s307
	for TNV: Shift s162
	for number: Shift s185
	for variable: Shift s186
	for (: Shift s293

State 153 = goto(28, *) copy of State 33

State 154 = goto(28, /) copy of State 34

State 155 = goto(35, EXPR) 
	FACTOR -> ( EXPR . )
	EXPR -> EXPR . NOP TERM
	NOP -> . +
	NOP -> . -
	NOP -> . %
	R -> ( EXPR . )

	Actions:
	for ): Shift s312
	for NOP: Shift s127
	for +: Shift s29
	for -: Shift s30
	for %: Shift s31

State 156 = goto(35, SS) copy of State 26

State 157 = goto(35, TSV) copy of State 27

State 158 = goto(35, string) copy of State 67

State 159 = goto(35, variable) 
	TSV -> variable .
	TNV -> variable .
	EDT -> variable .

	Actions:
	for ;: Reduce r100
	for ): Reduce r100
	for %: Reduce r100
	for +: Reduce r100
	for tu: Reduce r100
	for :: Reduce r100
	for -: Reduce r100
	for du: Reduce r100
	for /: Reduce r96
	for ,: Reduce r96
	for ]: Reduce r96
	for *: Reduce r96
	for orus: Reduce r100
	for ==: Reduce r100
	for andus: Reduce r100
	for !=: Reduce r100
	for <=: Reduce r100
	for ?: Reduce r100
	for >=: Reduce r100
	for <: Reduce r100
	for >: Reduce r100
	for notus: Reduce r100

State 160 = goto(35, TERM) copy of State 28

State 161 = goto(35, FACTOR) copy of State 32

State 162 = goto(35, TNV) 
	FACTOR -> TNV .

	Actions:
	for ): Reduce r46
	for +: Reduce r46
	for /: Reduce r46
	for tu: Reduce r46
	for :: Reduce r46
	for du: Reduce r46
	for ;: Reduce r46
	for %: Reduce r46
	for -: Reduce r46
	for *: Reduce r46

State 163 = goto(35, number) copy of State 66

State 164 = goto(35, () copy of State 35

State 165 = goto(35, LOGICAL) 
	EXPR -> LOGICAL .
	LOGICAL -> LOGICAL . LOP ER
	LOP -> . andus
	LOP -> . orus
	LOP -> . notus
	R -> ( LOGICAL . )

	Actions:
	for LOP: Shift s171
	for andus: Shift s38
	for orus: Shift s39
	for notus: Shift s40
	for ): Reduce r48
	for ;: Reduce r48
	for %: Reduce r48
	for +: Reduce r48
	for tu: Reduce r48
	for :: Reduce r48
	for -: Reduce r48
	for du: Reduce r48

State 166 = goto(35, ER) copy of State 37

State 167 = goto(35, R) copy of State 41

State 168 = goto(35, EDT) copy of State 101

State 169 = goto(35, DT) copy of State 68

State 170 = goto(35, char) copy of State 69

State 171 = goto(36, LOP) 
	LOGICAL -> LOGICAL LOP . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	R -> . ( EXPR )

	Actions:
	for ER: Shift s322
	for R: Shift s41
	for (: Shift s100
	for EDT: Shift s101
	for DT: Shift s68
	for number: Shift s103
	for char: Shift s69
	for string: Shift s105
	for variable: Shift s106

State 172 = goto(36, andus) copy of State 38

State 173 = goto(36, orus) copy of State 39

State 174 = goto(36, notus) copy of State 40

State 175 = goto(37, ROP) 
	ER -> ER ROP . R
	R -> . ( LOGICAL )
	R -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	R -> . ( EXPR )

	Actions:
	for R: Shift s331
	for (: Shift s100
	for EDT: Shift s101
	for DT: Shift s68
	for number: Shift s103
	for char: Shift s69
	for string: Shift s105
	for variable: Shift s106

State 176 = goto(37, ==) copy of State 42

State 177 = goto(37, !=) copy of State 43

State 178 = goto(37, >) copy of State 44

State 179 = goto(37, <) copy of State 45

State 180 = goto(37, >=) copy of State 46

State 181 = goto(37, <=) copy of State 47

State 182 = goto(48, =) 
	ASSIGN -> LHS = . RHS
	RHS -> . ARRAY
	ARRAY -> . [ AELEM ]
	RHS -> . ARRAYELEM
	ARRAYELEM -> . variable [ TNV ]
	RHS -> . TERNARY
	TERNARY -> . tribus LOGICAL ? OPTION : OPTION
	RHS -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	RHS -> . EXPR
	EXPR -> . SS
	SS -> . SS + TSV
	SS -> . TSV
	TSV -> . string
	TSV -> . variable
	EXPR -> . EXPR NOP TERM
	EXPR -> . TERM
	TERM -> . TERM FOP FACTOR
	TERM -> . FACTOR
	FACTOR -> . TNV
	TNV -> . number
	TNV -> . variable
	FACTOR -> . ( EXPR )
	EXPR -> . LOGICAL
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	R -> . ( EXPR )

	Actions:
	for RHS: Shift s339
	for ARRAY: Shift s49
	for [: Shift s52
	for ARRAYELEM: Shift s342
	for variable: Shift s343
	for TERNARY: Shift s51
	for tribus: Shift s24
	for EDT: Shift s346
	for DT: Shift s68
	for number: Shift s246
	for char: Shift s69
	for string: Shift s248
	for EXPR: Shift s351
	for SS: Shift s26
	for TSV: Shift s27
	for TERM: Shift s28
	for FACTOR: Shift s32
	for TNV: Shift s162
	for (: Shift s35
	for LOGICAL: Shift s36
	for ER: Shift s37
	for R: Shift s41

State 183 = goto(52, AELEM) 
	ARRAY -> [ AELEM . ]

	Actions:
	for ]: Shift s361

State 184 = goto(52, TNV) 
	AELEM -> TNV . , AELEM
	AELEM -> TNV .

	Actions:
	for ,: Shift s126
	for ]: Reduce r75

State 185 = goto(52, number) 
	TNV -> number .

	Actions:
	for ;: Reduce r95
	for ): Reduce r95
	for +: Reduce r95
	for %: Reduce r95
	for /: Reduce r95
	for ,: Reduce r95
	for ]: Reduce r95
	for tu: Reduce r95
	for :: Reduce r95
	for -: Reduce r95
	for du: Reduce r95
	for *: Reduce r95

State 186 = goto(52, variable) 
	TNV -> variable .

	Actions:
	for ;: Reduce r96
	for ): Reduce r96
	for +: Reduce r96
	for %: Reduce r96
	for /: Reduce r96
	for ,: Reduce r96
	for ]: Reduce r96
	for tu: Reduce r96
	for :: Reduce r96
	for -: Reduce r96
	for du: Reduce r96
	for *: Reduce r96

State 187 = goto(53, EDDT) 
	DECL -> declaro EDDT . SV
	SV -> . SV variable
	SV -> . variable

	Actions:
	for SV: Shift s363
	for variable: Shift s364

State 188 = goto(53, DDT) copy of State 55

State 189 = goto(53, incantum) copy of State 57

State 190 = goto(53, dublatum) copy of State 58

State 191 = goto(53, charmax) copy of State 59

State 192 = goto(53, stringo) copy of State 60

State 193 = goto(53, DARRAY) copy of State 56

State 194 = goto(53, arraygo) copy of State 61

State 195 = goto(54, variable) 
	SV -> SV variable .

	Actions:
	for ;: Reduce r78
	for variable: Reduce r78

State 196 = goto(61, [) 
	DARRAY -> arraygo [ . TNV ] DDT
	TNV -> . number
	TNV -> . variable

	Actions:
	for TNV: Shift s365
	for number: Shift s185
	for variable: Shift s186

State 197 = goto(62, variable) 
	UNARY -> ascendo variable .

	Actions:
	for ;: Reduce r87

State 198 = goto(63, variable) 
	UNARY -> descendo variable .

	Actions:
	for ;: Reduce r88

State 199 = goto(64, INOPTIONS) 
	IN -> scriptum INOPTIONS .

	Actions:
	for ;: Reduce r89

State 200 = goto(64, variable) 
	INOPTIONS -> variable .
	ARRAYELEM -> variable . [ TNV ]

	Actions:
	for [: Shift s368
	for ;: Reduce r90

State 201 = goto(64, ARRAYELEM) 
	INOPTIONS -> ARRAYELEM .

	Actions:
	for ;: Reduce r91

State 202 = goto(65, OUTOPTIONS) 
	OUT -> revelio OUTOPTIONS .

	Actions:
	for ;: Reduce r92

State 203 = goto(65, EDT) 
	OUTOPTIONS -> EDT .

	Actions:
	for ;: Reduce r93

State 204 = goto(65, DT) copy of State 68

State 205 = goto(65, number) copy of State 103

State 206 = goto(65, char) copy of State 69

State 207 = goto(65, string) copy of State 105

State 208 = goto(65, variable) 
	EDT -> variable .
	ARRAYELEM -> variable . [ TNV ]

	Actions:
	for [: Shift s368
	for ): Reduce r100
	for +: Reduce r100
	for orus: Reduce r100
	for ==: Reduce r100
	for andus: Reduce r100
	for tu: Reduce r100
	for :: Reduce r100
	for !=: Reduce r100
	for du: Reduce r100
	for ;: Reduce r100
	for <=: Reduce r100
	for ?: Reduce r100
	for >=: Reduce r100
	for %: Reduce r100
	for <: Reduce r100
	for >: Reduce r100
	for notus: Reduce r100
	for -: Reduce r100

State 209 = goto(65, ARRAYELEM) 
	OUTOPTIONS -> ARRAYELEM .

	Actions:
	for ;: Reduce r94

State 210 = goto(70, SN) 
	S -> enchanto { SN . }
	SN -> SN . N ;
	N -> . IN
	IN -> . scriptum INOPTIONS
	N -> . OUT
	OUT -> . revelio OUTOPTIONS
	N -> . DECL
	DECL -> . declaro EDDT SV
	N -> . UNARY
	UNARY -> . ascendo variable
	UNARY -> . descendo variable
	N -> . ASSIGN
	ASSIGN -> . LHS = RHS
	LHS -> . variable
	LHS -> . variable [ TNV ]
	N -> . IFBLOCK
	IFBLOCK -> . IFB ELIFB ELSEB
	IFB -> . mystime LOGICAL du { BLOCK }
	IFBLOCK -> . IFB ELIFB
	IFBLOCK -> . IFB ELSEB
	IFBLOCK -> . IFB
	N -> . FORBLOCK
	FORBLOCK -> . forculus FFROM tu FTO du { BLOCK }
	N -> . WHILEBLOCK
	WHILEBLOCK -> . whilegardium LOGICAL du { BLOCK }

	Actions:
	for }: Shift s370
	for N: Shift s71
	for IN: Shift s5
	for scriptum: Shift s64
	for OUT: Shift s6
	for revelio: Shift s65
	for DECL: Shift s7
	for declaro: Shift s53
	for UNARY: Shift s8
	for ascendo: Shift s62
	for descendo: Shift s63
	for ASSIGN: Shift s9
	for LHS: Shift s48
	for variable: Shift s83
	for IFBLOCK: Shift s10
	for IFB: Shift s13
	for mystime: Shift s14
	for FORBLOCK: Shift s11
	for forculus: Shift s18
	for WHILEBLOCK: Shift s12
	for whilegardium: Shift s23

State 211 = goto(70, N) copy of State 4

State 212 = goto(70, IN) copy of State 5

State 213 = goto(70, scriptum) copy of State 64

State 214 = goto(70, OUT) copy of State 6

State 215 = goto(70, revelio) copy of State 65

State 216 = goto(70, DECL) copy of State 7

State 217 = goto(70, declaro) copy of State 53

State 218 = goto(70, UNARY) copy of State 8

State 219 = goto(70, ascendo) copy of State 62

State 220 = goto(70, descendo) copy of State 63

State 221 = goto(70, ASSIGN) copy of State 9

State 222 = goto(70, LHS) copy of State 48

State 223 = goto(70, variable) copy of State 83

State 224 = goto(70, IFBLOCK) copy of State 10

State 225 = goto(70, IFB) copy of State 13

State 226 = goto(70, mystime) copy of State 14

State 227 = goto(70, FORBLOCK) copy of State 11

State 228 = goto(70, forculus) copy of State 18

State 229 = goto(70, WHILEBLOCK) copy of State 12

State 230 = goto(70, whilegardium) copy of State 23

State 231 = goto(71, ;) 
	SN -> SN N ; .

	Actions:
	for variable: Reduce r2
	for whilegardium: Reduce r2
	for descendo: Reduce r2
	for forculus: Reduce r2
	for mystime: Reduce r2
	for }: Reduce r2
	for declaro: Reduce r2
	for ascendo: Reduce r2
	for scriptum: Reduce r2
	for revelio: Reduce r2

State 232 = goto(83, [) 
	LHS -> variable [ . TNV ]
	TNV -> . number
	TNV -> . variable

	Actions:
	for TNV: Shift s391
	for number: Shift s185
	for variable: Shift s186

State 233 = goto(92, ELSEB) 
	IFBLOCK -> IFB ELIFB ELSEB .

	Actions:
	for ;: Reduce r12

State 234 = goto(92, returntime) copy of State 17

State 235 = goto(97, du) 
	IFB -> mystime LOGICAL du . { BLOCK }

	Actions:
	for {: Shift s394

State 236 = goto(97, LOP) copy of State 171

State 237 = goto(97, andus) copy of State 38

State 238 = goto(97, orus) copy of State 39

State 239 = goto(97, notus) copy of State 40

State 240 = goto(100, LOGICAL) 
	R -> ( LOGICAL . )
	LOGICAL -> LOGICAL . LOP ER
	LOP -> . andus
	LOP -> . orus
	LOP -> . notus
	EXPR -> LOGICAL .

	Actions:
	for ): Reduce r48
	for LOP: Shift s171
	for andus: Shift s38
	for orus: Shift s39
	for notus: Shift s40
	for ;: Reduce r48
	for %: Reduce r48
	for +: Reduce r48
	for tu: Reduce r48
	for :: Reduce r48
	for -: Reduce r48
	for du: Reduce r48

State 241 = goto(100, ER) copy of State 37

State 242 = goto(100, R) copy of State 41

State 243 = goto(100, () 
	R -> ( . LOGICAL )
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	R -> . ( EXPR )
	R -> ( . EXPR )
	EXPR -> . SS
	SS -> . SS + TSV
	SS -> . TSV
	TSV -> . string
	TSV -> . variable
	EXPR -> . EXPR NOP TERM
	EXPR -> . TERM
	TERM -> . TERM FOP FACTOR
	TERM -> . FACTOR
	FACTOR -> . TNV
	TNV -> . number
	TNV -> . variable
	FACTOR -> . ( EXPR )
	EXPR -> . LOGICAL
	FACTOR -> ( . EXPR )

	Actions:
	for LOGICAL: Shift s240
	for ER: Shift s37
	for R: Shift s41
	for (: Shift s243
	for EDT: Shift s101
	for DT: Shift s68
	for number: Shift s246
	for char: Shift s69
	for string: Shift s248
	for variable: Shift s249
	for EXPR: Shift s410
	for SS: Shift s26
	for TSV: Shift s27
	for TERM: Shift s28
	for FACTOR: Shift s32
	for TNV: Shift s162

State 244 = goto(100, EDT) copy of State 101

State 245 = goto(100, DT) copy of State 68

State 246 = goto(100, number) 
	DT -> number .
	TNV -> number .

	Actions:
	for ): Reduce r95
	for +: Reduce r95
	for orus: Reduce r101
	for ==: Reduce r101
	for andus: Reduce r101
	for tu: Reduce r95
	for :: Reduce r95
	for !=: Reduce r101
	for du: Reduce r95
	for ;: Reduce r95
	for <=: Reduce r101
	for ?: Reduce r101
	for >=: Reduce r101
	for %: Reduce r95
	for <: Reduce r101
	for >: Reduce r101
	for notus: Reduce r101
	for -: Reduce r95
	for /: Reduce r95
	for ,: Reduce r95
	for ]: Reduce r95
	for *: Reduce r95

State 247 = goto(100, char) copy of State 69

State 248 = goto(100, string) 
	DT -> string .
	TSV -> string .

	Actions:
	for ): Reduce r97
	for +: Reduce r97
	for orus: Reduce r103
	for ==: Reduce r103
	for andus: Reduce r103
	for tu: Reduce r97
	for :: Reduce r97
	for !=: Reduce r103
	for du: Reduce r97
	for ;: Reduce r97
	for <=: Reduce r103
	for ?: Reduce r103
	for >=: Reduce r103
	for %: Reduce r97
	for <: Reduce r103
	for >: Reduce r103
	for notus: Reduce r103
	for -: Reduce r97

State 249 = goto(100, variable) 
	EDT -> variable .
	TSV -> variable .
	TNV -> variable .

	Actions:
	for ): Reduce r96
	for +: Reduce r96
	for orus: Reduce r100
	for ==: Reduce r100
	for andus: Reduce r100
	for tu: Reduce r96
	for :: Reduce r96
	for !=: Reduce r100
	for du: Reduce r96
	for ;: Reduce r96
	for <=: Reduce r100
	for ?: Reduce r100
	for >=: Reduce r100
	for %: Reduce r96
	for <: Reduce r100
	for >: Reduce r100
	for notus: Reduce r100
	for -: Reduce r96
	for /: Reduce r96
	for ,: Reduce r96
	for ]: Reduce r96
	for *: Reduce r96

State 250 = goto(100, EXPR) 
	R -> ( EXPR . )
	EXPR -> EXPR . NOP TERM
	NOP -> . +
	NOP -> . -
	NOP -> . %

	Actions:
	for ): Shift s416
	for NOP: Shift s127
	for +: Shift s29
	for -: Shift s30
	for %: Shift s31

State 251 = goto(100, SS) copy of State 26

State 252 = goto(100, TSV) copy of State 27

State 253 = goto(100, TERM) copy of State 28

State 254 = goto(100, FACTOR) copy of State 32

State 255 = goto(100, TNV) copy of State 162

State 256 = goto(110, du) 
	ELIFBC -> turntime LOGICAL du . { BLOCK }

	Actions:
	for {: Shift s421

State 257 = goto(110, LOP) copy of State 171

State 258 = goto(110, andus) copy of State 38

State 259 = goto(110, orus) copy of State 39

State 260 = goto(110, notus) copy of State 40

State 261 = goto(120, {) 
	ELSEB -> returntime du { . BLOCK }
	BLOCK -> . SN
	SN -> . SN N ;
	SN -> . N ;
	N -> . IN
	IN -> . scriptum INOPTIONS
	N -> . OUT
	OUT -> . revelio OUTOPTIONS
	N -> . DECL
	DECL -> . declaro EDDT SV
	N -> . UNARY
	UNARY -> . ascendo variable
	UNARY -> . descendo variable
	N -> . ASSIGN
	ASSIGN -> . LHS = RHS
	LHS -> . variable
	LHS -> . variable [ TNV ]
	N -> . IFBLOCK
	IFBLOCK -> . IFB ELIFB ELSEB
	IFB -> . mystime LOGICAL du { BLOCK }
	IFBLOCK -> . IFB ELIFB
	IFBLOCK -> . IFB ELSEB
	IFBLOCK -> . IFB
	N -> . FORBLOCK
	FORBLOCK -> . forculus FFROM tu FTO du { BLOCK }
	N -> . WHILEBLOCK
	WHILEBLOCK -> . whilegardium LOGICAL du { BLOCK }

	Actions:
	for BLOCK: Shift s422
	for SN: Shift s423
	for N: Shift s4
	for IN: Shift s5
	for scriptum: Shift s64
	for OUT: Shift s6
	for revelio: Shift s65
	for DECL: Shift s7
	for declaro: Shift s53
	for UNARY: Shift s8
	for ascendo: Shift s62
	for descendo: Shift s63
	for ASSIGN: Shift s9
	for LHS: Shift s48
	for variable: Shift s83
	for IFBLOCK: Shift s10
	for IFB: Shift s13
	for mystime: Shift s14
	for FORBLOCK: Shift s11
	for forculus: Shift s18
	for WHILEBLOCK: Shift s12
	for whilegardium: Shift s23

State 262 = goto(121, tu) 
	FORBLOCK -> forculus FFROM tu . FTO du { BLOCK }
	FTO -> . TNV
	TNV -> . number
	TNV -> . variable
	FTO -> . EXPR
	EXPR -> . SS
	SS -> . SS + TSV
	SS -> . TSV
	TSV -> . string
	TSV -> . variable
	EXPR -> . EXPR NOP TERM
	EXPR -> . TERM
	TERM -> . TERM FOP FACTOR
	TERM -> . FACTOR
	FACTOR -> . TNV
	FACTOR -> . ( EXPR )
	EXPR -> . LOGICAL
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	R -> . ( EXPR )

	Actions:
	for FTO: Shift s444
	for TNV: Shift s445
	for number: Shift s66
	for variable: Shift s267
	for EXPR: Shift s448
	for SS: Shift s26
	for TSV: Shift s27
	for string: Shift s67
	for TERM: Shift s28
	for FACTOR: Shift s32
	for (: Shift s35
	for LOGICAL: Shift s36
	for ER: Shift s37
	for R: Shift s41
	for EDT: Shift s101
	for DT: Shift s68
	for char: Shift s69

State 263 = goto(123, =) copy of State 124

State 264 = goto(124, SRHS) 
	SAASIGN -> variable = SRHS .

	Actions:
	for tu: Reduce r24

State 265 = goto(124, TNV) 
	SRHS -> TNV .
	FACTOR -> TNV .

	Actions:
	for tu: Reduce r46
	for ): Reduce r46
	for +: Reduce r46
	for /: Reduce r46
	for :: Reduce r46
	for du: Reduce r46
	for ;: Reduce r46
	for %: Reduce r46
	for -: Reduce r46
	for *: Reduce r46

State 266 = goto(124, number) copy of State 66

State 267 = goto(124, variable) 
	TNV -> variable .
	TSV -> variable .
	EDT -> variable .

	Actions:
	for ;: Reduce r100
	for ): Reduce r100
	for +: Reduce r100
	for %: Reduce r100
	for /: Reduce r96
	for ,: Reduce r96
	for ]: Reduce r96
	for tu: Reduce r100
	for :: Reduce r100
	for -: Reduce r100
	for du: Reduce r100
	for *: Reduce r96
	for orus: Reduce r100
	for ==: Reduce r100
	for andus: Reduce r100
	for !=: Reduce r100
	for <=: Reduce r100
	for ?: Reduce r100
	for >=: Reduce r100
	for <: Reduce r100
	for >: Reduce r100
	for notus: Reduce r100

State 268 = goto(124, EXPR) 
	SRHS -> EXPR .
	EXPR -> EXPR . NOP TERM
	NOP -> . +
	NOP -> . -
	NOP -> . %

	Actions:
	for NOP: Shift s127
	for +: Shift s29
	for -: Shift s30
	for %: Shift s31
	for tu: Reduce r26

State 269 = goto(124, SS) copy of State 26

State 270 = goto(124, TSV) copy of State 27

State 271 = goto(124, string) copy of State 67

State 272 = goto(124, TERM) copy of State 28

State 273 = goto(124, FACTOR) copy of State 32

State 274 = goto(124, () copy of State 35

State 275 = goto(124, LOGICAL) copy of State 36

State 276 = goto(124, ER) copy of State 37

State 277 = goto(124, R) copy of State 41

State 278 = goto(124, EDT) copy of State 101

State 279 = goto(124, DT) copy of State 68

State 280 = goto(124, char) copy of State 69

State 281 = goto(125, TNV) 
	LHS -> variable [ TNV . ]
	ARRAYELEM -> variable [ TNV . ]

	Actions:
	for ]: Shift s465

State 282 = goto(125, number) copy of State 185

State 283 = goto(125, variable) copy of State 186

State 284 = goto(126, AELEM) 
	AELEM -> TNV , AELEM .

	Actions:
	for ]: Reduce r74

State 285 = goto(126, TNV) copy of State 184

State 286 = goto(126, number) copy of State 185

State 287 = goto(126, variable) copy of State 186

State 288 = goto(127, TERM) 
	EXPR -> EXPR NOP TERM .
	TERM -> TERM . FOP FACTOR
	FOP -> . *
	FOP -> . /

	Actions:
	for FOP: Shift s152
	for *: Shift s33
	for /: Shift s34
	for ;: Reduce r37
	for ): Reduce r37
	for %: Reduce r37
	for +: Reduce r37
	for tu: Reduce r37
	for :: Reduce r37
	for -: Reduce r37
	for du: Reduce r37

State 289 = goto(127, FACTOR) copy of State 32

State 290 = goto(127, TNV) copy of State 162

State 291 = goto(127, number) copy of State 185

State 292 = goto(127, variable) copy of State 186

State 293 = goto(127, () 
	FACTOR -> ( . EXPR )
	EXPR -> . SS
	SS -> . SS + TSV
	SS -> . TSV
	TSV -> . string
	TSV -> . variable
	EXPR -> . EXPR NOP TERM
	EXPR -> . TERM
	TERM -> . TERM FOP FACTOR
	TERM -> . FACTOR
	FACTOR -> . TNV
	TNV -> . number
	TNV -> . variable
	FACTOR -> . ( EXPR )
	EXPR -> . LOGICAL
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	R -> . ( EXPR )

	Actions:
	for EXPR: Shift s469
	for SS: Shift s26
	for TSV: Shift s27
	for string: Shift s67
	for variable: Shift s159
	for TERM: Shift s28
	for FACTOR: Shift s32
	for TNV: Shift s162
	for number: Shift s66
	for (: Shift s35
	for LOGICAL: Shift s36
	for ER: Shift s37
	for R: Shift s41
	for EDT: Shift s101
	for DT: Shift s68
	for char: Shift s69

State 294 = goto(131, du) 
	WHILEBLOCK -> whilegardium LOGICAL du . { BLOCK }

	Actions:
	for {: Shift s485

State 295 = goto(131, LOP) copy of State 171

State 296 = goto(131, andus) copy of State 38

State 297 = goto(131, orus) copy of State 39

State 298 = goto(131, notus) copy of State 40

State 299 = goto(141, ?) 
	TERNARY -> tribus LOGICAL ? . OPTION : OPTION
	OPTION -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	OPTION -> . EXPR
	EXPR -> . SS
	SS -> . SS + TSV
	SS -> . TSV
	TSV -> . string
	TSV -> . variable
	EXPR -> . EXPR NOP TERM
	EXPR -> . TERM
	TERM -> . TERM FOP FACTOR
	TERM -> . FACTOR
	FACTOR -> . TNV
	TNV -> . number
	TNV -> . variable
	FACTOR -> . ( EXPR )
	EXPR -> . LOGICAL
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	R -> . ( EXPR )

	Actions:
	for OPTION: Shift s486
	for EDT: Shift s487
	for DT: Shift s68
	for number: Shift s246
	for char: Shift s69
	for string: Shift s248
	for variable: Shift s249
	for EXPR: Shift s493
	for SS: Shift s26
	for TSV: Shift s27
	for TERM: Shift s28
	for FACTOR: Shift s32
	for TNV: Shift s162
	for (: Shift s35
	for LOGICAL: Shift s36
	for ER: Shift s37
	for R: Shift s41

State 300 = goto(141, LOP) copy of State 171

State 301 = goto(141, andus) copy of State 38

State 302 = goto(141, orus) copy of State 39

State 303 = goto(141, notus) copy of State 40

State 304 = goto(151, TSV) 
	SS -> SS + TSV .

	Actions:
	for ;: Reduce r35
	for ): Reduce r35
	for %: Reduce r35
	for +: Reduce r35
	for tu: Reduce r35
	for :: Reduce r35
	for -: Reduce r35
	for du: Reduce r35

State 305 = goto(151, string) 
	TSV -> string .

	Actions:
	for ;: Reduce r97
	for ): Reduce r97
	for %: Reduce r97
	for +: Reduce r97
	for tu: Reduce r97
	for :: Reduce r97
	for -: Reduce r97
	for du: Reduce r97

State 306 = goto(151, variable) 
	TSV -> variable .

	Actions:
	for ;: Reduce r98
	for ): Reduce r98
	for %: Reduce r98
	for +: Reduce r98
	for tu: Reduce r98
	for :: Reduce r98
	for -: Reduce r98
	for du: Reduce r98

State 307 = goto(152, FACTOR) 
	TERM -> TERM FOP FACTOR .

	Actions:
	for ;: Reduce r42
	for ): Reduce r42
	for %: Reduce r42
	for +: Reduce r42
	for /: Reduce r42
	for tu: Reduce r42
	for :: Reduce r42
	for -: Reduce r42
	for du: Reduce r42
	for *: Reduce r42

State 308 = goto(152, TNV) copy of State 162

State 309 = goto(152, number) copy of State 185

State 310 = goto(152, variable) copy of State 186

State 311 = goto(152, () copy of State 293

State 312 = goto(155, )) 
	FACTOR -> ( EXPR ) .
	R -> ( EXPR ) .

	Actions:
	for ): Reduce r64
	for +: Reduce r64
	for /: Reduce r47
	for tu: Reduce r64
	for :: Reduce r64
	for du: Reduce r64
	for ;: Reduce r64
	for %: Reduce r64
	for -: Reduce r64
	for *: Reduce r47
	for orus: Reduce r64
	for ==: Reduce r64
	for andus: Reduce r64
	for !=: Reduce r64
	for <=: Reduce r64
	for ?: Reduce r64
	for >=: Reduce r64
	for <: Reduce r64
	for >: Reduce r64
	for notus: Reduce r64

State 313 = goto(155, NOP) copy of State 127

State 314 = goto(155, +) copy of State 29

State 315 = goto(155, -) copy of State 30

State 316 = goto(155, %) copy of State 31

State 317 = goto(165, LOP) copy of State 171

State 318 = goto(165, andus) copy of State 38

State 319 = goto(165, orus) copy of State 39

State 320 = goto(165, notus) copy of State 40

State 321 = goto(165, )) 
	R -> ( LOGICAL ) .

	Actions:
	for ): Reduce r62
	for +: Reduce r62
	for orus: Reduce r62
	for ==: Reduce r62
	for andus: Reduce r62
	for tu: Reduce r62
	for :: Reduce r62
	for !=: Reduce r62
	for du: Reduce r62
	for ;: Reduce r62
	for <=: Reduce r62
	for ?: Reduce r62
	for >=: Reduce r62
	for %: Reduce r62
	for <: Reduce r62
	for >: Reduce r62
	for notus: Reduce r62
	for -: Reduce r62

State 322 = goto(171, ER) 
	LOGICAL -> LOGICAL LOP ER .
	ER -> ER . ROP R
	ROP -> . ==
	ROP -> . !=
	ROP -> . >
	ROP -> . <
	ROP -> . >=
	ROP -> . <=

	Actions:
	for ROP: Shift s175
	for ==: Shift s42
	for !=: Shift s43
	for >: Shift s44
	for <: Shift s45
	for >=: Shift s46
	for <=: Shift s47
	for ;: Reduce r49
	for ): Reduce r49
	for ?: Reduce r49
	for %: Reduce r49
	for +: Reduce r49
	for orus: Reduce r49
	for andus: Reduce r49
	for tu: Reduce r49
	for :: Reduce r49
	for -: Reduce r49
	for notus: Reduce r49
	for du: Reduce r49

State 323 = goto(171, R) copy of State 41

State 324 = goto(171, () copy of State 100

State 325 = goto(171, EDT) copy of State 101

State 326 = goto(171, DT) copy of State 68

State 327 = goto(171, number) copy of State 103

State 328 = goto(171, char) copy of State 69

State 329 = goto(171, string) copy of State 105

State 330 = goto(171, variable) copy of State 106

State 331 = goto(175, R) 
	ER -> ER ROP R .

	Actions:
	for ;: Reduce r54
	for ): Reduce r54
	for <=: Reduce r54
	for ?: Reduce r54
	for >=: Reduce r54
	for +: Reduce r54
	for orus: Reduce r54
	for %: Reduce r54
	for -: Reduce r54
	for andus: Reduce r54
	for ==: Reduce r54
	for <: Reduce r54
	for >: Reduce r54
	for tu: Reduce r54
	for :: Reduce r54
	for notus: Reduce r54
	for !=: Reduce r54
	for du: Reduce r54

State 332 = goto(175, () copy of State 100

State 333 = goto(175, EDT) copy of State 101

State 334 = goto(175, DT) copy of State 68

State 335 = goto(175, number) copy of State 103

State 336 = goto(175, char) copy of State 69

State 337 = goto(175, string) copy of State 105

State 338 = goto(175, variable) copy of State 106

State 339 = goto(182, RHS) 
	ASSIGN -> LHS = RHS .

	Actions:
	for ;: Reduce r65

State 340 = goto(182, ARRAY) copy of State 49

State 341 = goto(182, [) copy of State 52

State 342 = goto(182, ARRAYELEM) 
	RHS -> ARRAYELEM .

	Actions:
	for ;: Reduce r69

State 343 = goto(182, variable) 
	ARRAYELEM -> variable . [ TNV ]
	EDT -> variable .
	TSV -> variable .
	TNV -> variable .

	Actions:
	for [: Shift s368
	for ): Reduce r96
	for +: Reduce r96
	for orus: Reduce r100
	for ==: Reduce r100
	for andus: Reduce r100
	for tu: Reduce r96
	for :: Reduce r96
	for !=: Reduce r100
	for du: Reduce r96
	for ;: Reduce r96
	for <=: Reduce r100
	for ?: Reduce r100
	for >=: Reduce r100
	for %: Reduce r96
	for <: Reduce r100
	for >: Reduce r100
	for notus: Reduce r100
	for -: Reduce r96
	for /: Reduce r96
	for ,: Reduce r96
	for ]: Reduce r96
	for *: Reduce r96

State 344 = goto(182, TERNARY) copy of State 51

State 345 = goto(182, tribus) copy of State 24

State 346 = goto(182, EDT) 
	RHS -> EDT .
	R -> EDT .

	Actions:
	for ;: Reduce r63
	for ): Reduce r63
	for +: Reduce r63
	for orus: Reduce r63
	for ==: Reduce r63
	for andus: Reduce r63
	for tu: Reduce r63
	for :: Reduce r63
	for !=: Reduce r63
	for du: Reduce r63
	for <=: Reduce r63
	for ?: Reduce r63
	for >=: Reduce r63
	for %: Reduce r63
	for <: Reduce r63
	for >: Reduce r63
	for notus: Reduce r63
	for -: Reduce r63

State 347 = goto(182, DT) copy of State 68

State 348 = goto(182, number) copy of State 246

State 349 = goto(182, char) copy of State 69

State 350 = goto(182, string) copy of State 248

State 351 = goto(182, EXPR) 
	RHS -> EXPR .
	EXPR -> EXPR . NOP TERM
	NOP -> . +
	NOP -> . -
	NOP -> . %

	Actions:
	for NOP: Shift s127
	for +: Shift s29
	for -: Shift s30
	for %: Shift s31
	for ;: Reduce r72

State 352 = goto(182, SS) copy of State 26

State 353 = goto(182, TSV) copy of State 27

State 354 = goto(182, TERM) copy of State 28

State 355 = goto(182, FACTOR) copy of State 32

State 356 = goto(182, TNV) copy of State 162

State 357 = goto(182, () copy of State 35

State 358 = goto(182, LOGICAL) copy of State 36

State 359 = goto(182, ER) copy of State 37

State 360 = goto(182, R) copy of State 41

State 361 = goto(183, ]) 
	ARRAY -> [ AELEM ] .

	Actions:
	for ;: Reduce r73

State 362 = goto(184, ,) copy of State 126

State 363 = goto(187, SV) 
	DECL -> declaro EDDT SV .
	SV -> SV . variable

	Actions:
	for variable: Shift s195
	for ;: Reduce r77

State 364 = goto(187, variable) 
	SV -> variable .

	Actions:
	for ;: Reduce r79
	for variable: Reduce r79

State 365 = goto(196, TNV) 
	DARRAY -> arraygo [ TNV . ] DDT

	Actions:
	for ]: Shift s516

State 366 = goto(196, number) copy of State 185

State 367 = goto(196, variable) copy of State 186

State 368 = goto(200, [) 
	ARRAYELEM -> variable [ . TNV ]
	TNV -> . number
	TNV -> . variable

	Actions:
	for TNV: Shift s517
	for number: Shift s185
	for variable: Shift s186

State 369 = goto(208, [) copy of State 368

State 370 = goto(210, }) 
	S -> enchanto { SN } .

	Actions:
	for #: Reduce r1

State 371 = goto(210, N) copy of State 71

State 372 = goto(210, IN) copy of State 5

State 373 = goto(210, scriptum) copy of State 64

State 374 = goto(210, OUT) copy of State 6

State 375 = goto(210, revelio) copy of State 65

State 376 = goto(210, DECL) copy of State 7

State 377 = goto(210, declaro) copy of State 53

State 378 = goto(210, UNARY) copy of State 8

State 379 = goto(210, ascendo) copy of State 62

State 380 = goto(210, descendo) copy of State 63

State 381 = goto(210, ASSIGN) copy of State 9

State 382 = goto(210, LHS) copy of State 48

State 383 = goto(210, variable) copy of State 83

State 384 = goto(210, IFBLOCK) copy of State 10

State 385 = goto(210, IFB) copy of State 13

State 386 = goto(210, mystime) copy of State 14

State 387 = goto(210, FORBLOCK) copy of State 11

State 388 = goto(210, forculus) copy of State 18

State 389 = goto(210, WHILEBLOCK) copy of State 12

State 390 = goto(210, whilegardium) copy of State 23

State 391 = goto(232, TNV) 
	LHS -> variable [ TNV . ]

	Actions:
	for ]: Shift s520

State 392 = goto(232, number) copy of State 185

State 393 = goto(232, variable) copy of State 186

State 394 = goto(235, {) 
	IFB -> mystime LOGICAL du { . BLOCK }
	BLOCK -> . SN
	SN -> . SN N ;
	SN -> . N ;
	N -> . IN
	IN -> . scriptum INOPTIONS
	N -> . OUT
	OUT -> . revelio OUTOPTIONS
	N -> . DECL
	DECL -> . declaro EDDT SV
	N -> . UNARY
	UNARY -> . ascendo variable
	UNARY -> . descendo variable
	N -> . ASSIGN
	ASSIGN -> . LHS = RHS
	LHS -> . variable
	LHS -> . variable [ TNV ]
	N -> . IFBLOCK
	IFBLOCK -> . IFB ELIFB ELSEB
	IFB -> . mystime LOGICAL du { BLOCK }
	IFBLOCK -> . IFB ELIFB
	IFBLOCK -> . IFB ELSEB
	IFBLOCK -> . IFB
	N -> . FORBLOCK
	FORBLOCK -> . forculus FFROM tu FTO du { BLOCK }
	N -> . WHILEBLOCK
	WHILEBLOCK -> . whilegardium LOGICAL du { BLOCK }

	Actions:
	for BLOCK: Shift s521
	for SN: Shift s423
	for N: Shift s4
	for IN: Shift s5
	for scriptum: Shift s64
	for OUT: Shift s6
	for revelio: Shift s65
	for DECL: Shift s7
	for declaro: Shift s53
	for UNARY: Shift s8
	for ascendo: Shift s62
	for descendo: Shift s63
	for ASSIGN: Shift s9
	for LHS: Shift s48
	for variable: Shift s83
	for IFBLOCK: Shift s10
	for IFB: Shift s13
	for mystime: Shift s14
	for FORBLOCK: Shift s11
	for forculus: Shift s18
	for WHILEBLOCK: Shift s12
	for whilegardium: Shift s23

State 395 = goto(240, )) copy of State 321

State 396 = goto(240, LOP) copy of State 171

State 397 = goto(240, andus) copy of State 38

State 398 = goto(240, orus) copy of State 39

State 399 = goto(240, notus) copy of State 40

State 400 = goto(243, LOGICAL) copy of State 240

State 401 = goto(243, ER) copy of State 37

State 402 = goto(243, R) copy of State 41

State 403 = goto(243, () copy of State 243

State 404 = goto(243, EDT) copy of State 101

State 405 = goto(243, DT) copy of State 68

State 406 = goto(243, number) copy of State 246

State 407 = goto(243, char) copy of State 69

State 408 = goto(243, string) copy of State 248

State 409 = goto(243, variable) copy of State 249

State 410 = goto(243, EXPR) 
	R -> ( EXPR . )
	EXPR -> EXPR . NOP TERM
	NOP -> . +
	NOP -> . -
	NOP -> . %
	FACTOR -> ( EXPR . )

	Actions:
	for ): Shift s543
	for NOP: Shift s127
	for +: Shift s29
	for -: Shift s30
	for %: Shift s31

State 411 = goto(243, SS) copy of State 26

State 412 = goto(243, TSV) copy of State 27

State 413 = goto(243, TERM) copy of State 28

State 414 = goto(243, FACTOR) copy of State 32

State 415 = goto(243, TNV) copy of State 162

State 416 = goto(250, )) 
	R -> ( EXPR ) .

	Actions:
	for ): Reduce r64
	for +: Reduce r64
	for orus: Reduce r64
	for ==: Reduce r64
	for andus: Reduce r64
	for tu: Reduce r64
	for :: Reduce r64
	for !=: Reduce r64
	for du: Reduce r64
	for ;: Reduce r64
	for <=: Reduce r64
	for ?: Reduce r64
	for >=: Reduce r64
	for %: Reduce r64
	for <: Reduce r64
	for >: Reduce r64
	for notus: Reduce r64
	for -: Reduce r64

State 417 = goto(250, NOP) copy of State 127

State 418 = goto(250, +) copy of State 29

State 419 = goto(250, -) copy of State 30

State 420 = goto(250, %) copy of State 31

State 421 = goto(256, {) 
	ELIFBC -> turntime LOGICAL du { . BLOCK }
	BLOCK -> . SN
	SN -> . SN N ;
	SN -> . N ;
	N -> . IN
	IN -> . scriptum INOPTIONS
	N -> . OUT
	OUT -> . revelio OUTOPTIONS
	N -> . DECL
	DECL -> . declaro EDDT SV
	N -> . UNARY
	UNARY -> . ascendo variable
	UNARY -> . descendo variable
	N -> . ASSIGN
	ASSIGN -> . LHS = RHS
	LHS -> . variable
	LHS -> . variable [ TNV ]
	N -> . IFBLOCK
	IFBLOCK -> . IFB ELIFB ELSEB
	IFB -> . mystime LOGICAL du { BLOCK }
	IFBLOCK -> . IFB ELIFB
	IFBLOCK -> . IFB ELSEB
	IFBLOCK -> . IFB
	N -> . FORBLOCK
	FORBLOCK -> . forculus FFROM tu FTO du { BLOCK }
	N -> . WHILEBLOCK
	WHILEBLOCK -> . whilegardium LOGICAL du { BLOCK }

	Actions:
	for BLOCK: Shift s548
	for SN: Shift s423
	for N: Shift s4
	for IN: Shift s5
	for scriptum: Shift s64
	for OUT: Shift s6
	for revelio: Shift s65
	for DECL: Shift s7
	for declaro: Shift s53
	for UNARY: Shift s8
	for ascendo: Shift s62
	for descendo: Shift s63
	for ASSIGN: Shift s9
	for LHS: Shift s48
	for variable: Shift s83
	for IFBLOCK: Shift s10
	for IFB: Shift s13
	for mystime: Shift s14
	for FORBLOCK: Shift s11
	for forculus: Shift s18
	for WHILEBLOCK: Shift s12
	for whilegardium: Shift s23

State 422 = goto(261, BLOCK) 
	ELSEB -> returntime du { BLOCK . }

	Actions:
	for }: Shift s570

State 423 = goto(261, SN) 
	BLOCK -> SN .
	SN -> SN . N ;
	N -> . IN
	IN -> . scriptum INOPTIONS
	N -> . OUT
	OUT -> . revelio OUTOPTIONS
	N -> . DECL
	DECL -> . declaro EDDT SV
	N -> . UNARY
	UNARY -> . ascendo variable
	UNARY -> . descendo variable
	N -> . ASSIGN
	ASSIGN -> . LHS = RHS
	LHS -> . variable
	LHS -> . variable [ TNV ]
	N -> . IFBLOCK
	IFBLOCK -> . IFB ELIFB ELSEB
	IFB -> . mystime LOGICAL du { BLOCK }
	IFBLOCK -> . IFB ELIFB
	IFBLOCK -> . IFB ELSEB
	IFBLOCK -> . IFB
	N -> . FORBLOCK
	FORBLOCK -> . forculus FFROM tu FTO du { BLOCK }
	N -> . WHILEBLOCK
	WHILEBLOCK -> . whilegardium LOGICAL du { BLOCK }

	Actions:
	for N: Shift s71
	for IN: Shift s5
	for scriptum: Shift s64
	for OUT: Shift s6
	for revelio: Shift s65
	for DECL: Shift s7
	for declaro: Shift s53
	for UNARY: Shift s8
	for ascendo: Shift s62
	for descendo: Shift s63
	for ASSIGN: Shift s9
	for LHS: Shift s48
	for variable: Shift s83
	for IFBLOCK: Shift s10
	for IFB: Shift s13
	for mystime: Shift s14
	for FORBLOCK: Shift s11
	for forculus: Shift s18
	for WHILEBLOCK: Shift s12
	for whilegardium: Shift s23
	for }: Reduce r30

State 424 = goto(261, N) copy of State 4

State 425 = goto(261, IN) copy of State 5

State 426 = goto(261, scriptum) copy of State 64

State 427 = goto(261, OUT) copy of State 6

State 428 = goto(261, revelio) copy of State 65

State 429 = goto(261, DECL) copy of State 7

State 430 = goto(261, declaro) copy of State 53

State 431 = goto(261, UNARY) copy of State 8

State 432 = goto(261, ascendo) copy of State 62

State 433 = goto(261, descendo) copy of State 63

State 434 = goto(261, ASSIGN) copy of State 9

State 435 = goto(261, LHS) copy of State 48

State 436 = goto(261, variable) copy of State 83

State 437 = goto(261, IFBLOCK) copy of State 10

State 438 = goto(261, IFB) copy of State 13

State 439 = goto(261, mystime) copy of State 14

State 440 = goto(261, FORBLOCK) copy of State 11

State 441 = goto(261, forculus) copy of State 18

State 442 = goto(261, WHILEBLOCK) copy of State 12

State 443 = goto(261, whilegardium) copy of State 23

State 444 = goto(262, FTO) 
	FORBLOCK -> forculus FFROM tu FTO . du { BLOCK }

	Actions:
	for du: Shift s591

State 445 = goto(262, TNV) 
	FTO -> TNV .
	FACTOR -> TNV .

	Actions:
	for du: Reduce r46
	for ): Reduce r46
	for +: Reduce r46
	for /: Reduce r46
	for tu: Reduce r46
	for :: Reduce r46
	for ;: Reduce r46
	for %: Reduce r46
	for -: Reduce r46
	for *: Reduce r46

State 446 = goto(262, number) copy of State 66

State 447 = goto(262, variable) copy of State 267

State 448 = goto(262, EXPR) 
	FTO -> EXPR .
	EXPR -> EXPR . NOP TERM
	NOP -> . +
	NOP -> . -
	NOP -> . %

	Actions:
	for NOP: Shift s127
	for +: Shift s29
	for -: Shift s30
	for %: Shift s31
	for du: Reduce r28

State 449 = goto(262, SS) copy of State 26

State 450 = goto(262, TSV) copy of State 27

State 451 = goto(262, string) copy of State 67

State 452 = goto(262, TERM) copy of State 28

State 453 = goto(262, FACTOR) copy of State 32

State 454 = goto(262, () copy of State 35

State 455 = goto(262, LOGICAL) copy of State 36

State 456 = goto(262, ER) copy of State 37

State 457 = goto(262, R) copy of State 41

State 458 = goto(262, EDT) copy of State 101

State 459 = goto(262, DT) copy of State 68

State 460 = goto(262, char) copy of State 69

State 461 = goto(268, NOP) copy of State 127

State 462 = goto(268, +) copy of State 29

State 463 = goto(268, -) copy of State 30

State 464 = goto(268, %) copy of State 31

State 465 = goto(281, ]) 
	LHS -> variable [ TNV ] .
	ARRAYELEM -> variable [ TNV ] .

	Actions:
	for =: Reduce r67
	for ;: Reduce r76

State 466 = goto(288, FOP) copy of State 152

State 467 = goto(288, *) copy of State 33

State 468 = goto(288, /) copy of State 34

State 469 = goto(293, EXPR) 
	FACTOR -> ( EXPR . )
	EXPR -> EXPR . NOP TERM
	NOP -> . +
	NOP -> . -
	NOP -> . %

	Actions:
	for ): Shift s596
	for NOP: Shift s127
	for +: Shift s29
	for -: Shift s30
	for %: Shift s31

State 470 = goto(293, SS) copy of State 26

State 471 = goto(293, TSV) copy of State 27

State 472 = goto(293, string) copy of State 67

State 473 = goto(293, variable) copy of State 159

State 474 = goto(293, TERM) copy of State 28

State 475 = goto(293, FACTOR) copy of State 32

State 476 = goto(293, TNV) copy of State 162

State 477 = goto(293, number) copy of State 66

State 478 = goto(293, () copy of State 35

State 479 = goto(293, LOGICAL) copy of State 36

State 480 = goto(293, ER) copy of State 37

State 481 = goto(293, R) copy of State 41

State 482 = goto(293, EDT) copy of State 101

State 483 = goto(293, DT) copy of State 68

State 484 = goto(293, char) copy of State 69

State 485 = goto(294, {) 
	WHILEBLOCK -> whilegardium LOGICAL du { . BLOCK }
	BLOCK -> . SN
	SN -> . SN N ;
	SN -> . N ;
	N -> . IN
	IN -> . scriptum INOPTIONS
	N -> . OUT
	OUT -> . revelio OUTOPTIONS
	N -> . DECL
	DECL -> . declaro EDDT SV
	N -> . UNARY
	UNARY -> . ascendo variable
	UNARY -> . descendo variable
	N -> . ASSIGN
	ASSIGN -> . LHS = RHS
	LHS -> . variable
	LHS -> . variable [ TNV ]
	N -> . IFBLOCK
	IFBLOCK -> . IFB ELIFB ELSEB
	IFB -> . mystime LOGICAL du { BLOCK }
	IFBLOCK -> . IFB ELIFB
	IFBLOCK -> . IFB ELSEB
	IFBLOCK -> . IFB
	N -> . FORBLOCK
	FORBLOCK -> . forculus FFROM tu FTO du { BLOCK }
	N -> . WHILEBLOCK
	WHILEBLOCK -> . whilegardium LOGICAL du { BLOCK }

	Actions:
	for BLOCK: Shift s601
	for SN: Shift s423
	for N: Shift s4
	for IN: Shift s5
	for scriptum: Shift s64
	for OUT: Shift s6
	for revelio: Shift s65
	for DECL: Shift s7
	for declaro: Shift s53
	for UNARY: Shift s8
	for ascendo: Shift s62
	for descendo: Shift s63
	for ASSIGN: Shift s9
	for LHS: Shift s48
	for variable: Shift s83
	for IFBLOCK: Shift s10
	for IFB: Shift s13
	for mystime: Shift s14
	for FORBLOCK: Shift s11
	for forculus: Shift s18
	for WHILEBLOCK: Shift s12
	for whilegardium: Shift s23

State 486 = goto(299, OPTION) 
	TERNARY -> tribus LOGICAL ? OPTION . : OPTION

	Actions:
	for :: Shift s623

State 487 = goto(299, EDT) 
	OPTION -> EDT .
	R -> EDT .

	Actions:
	for ;: Reduce r63
	for :: Reduce r63
	for ): Reduce r63
	for +: Reduce r63
	for orus: Reduce r63
	for ==: Reduce r63
	for andus: Reduce r63
	for tu: Reduce r63
	for !=: Reduce r63
	for du: Reduce r63
	for <=: Reduce r63
	for ?: Reduce r63
	for >=: Reduce r63
	for %: Reduce r63
	for <: Reduce r63
	for >: Reduce r63
	for notus: Reduce r63
	for -: Reduce r63

State 488 = goto(299, DT) copy of State 68

State 489 = goto(299, number) copy of State 246

State 490 = goto(299, char) copy of State 69

State 491 = goto(299, string) copy of State 248

State 492 = goto(299, variable) copy of State 249

State 493 = goto(299, EXPR) 
	OPTION -> EXPR .
	EXPR -> EXPR . NOP TERM
	NOP -> . +
	NOP -> . -
	NOP -> . %

	Actions:
	for NOP: Shift s127
	for +: Shift s29
	for -: Shift s30
	for %: Shift s31
	for ;: Reduce r33
	for :: Reduce r33

State 494 = goto(299, SS) copy of State 26

State 495 = goto(299, TSV) copy of State 27

State 496 = goto(299, TERM) copy of State 28

State 497 = goto(299, FACTOR) copy of State 32

State 498 = goto(299, TNV) copy of State 162

State 499 = goto(299, () copy of State 35

State 500 = goto(299, LOGICAL) copy of State 36

State 501 = goto(299, ER) copy of State 37

State 502 = goto(299, R) copy of State 41

State 503 = goto(322, ROP) copy of State 175

State 504 = goto(322, ==) copy of State 42

State 505 = goto(322, !=) copy of State 43

State 506 = goto(322, >) copy of State 44

State 507 = goto(322, <) copy of State 45

State 508 = goto(322, >=) copy of State 46

State 509 = goto(322, <=) copy of State 47

State 510 = goto(343, [) copy of State 368

State 511 = goto(351, NOP) copy of State 127

State 512 = goto(351, +) copy of State 29

State 513 = goto(351, -) copy of State 30

State 514 = goto(351, %) copy of State 31

State 515 = goto(363, variable) copy of State 195

State 516 = goto(365, ]) 
	DARRAY -> arraygo [ TNV ] . DDT
	DDT -> . incantum
	DDT -> . dublatum
	DDT -> . charmax
	DDT -> . stringo

	Actions:
	for DDT: Shift s628
	for incantum: Shift s57
	for dublatum: Shift s58
	for charmax: Shift s59
	for stringo: Shift s60

State 517 = goto(368, TNV) 
	ARRAYELEM -> variable [ TNV . ]

	Actions:
	for ]: Shift s633

State 518 = goto(368, number) copy of State 185

State 519 = goto(368, variable) copy of State 186

State 520 = goto(391, ]) 
	LHS -> variable [ TNV ] .

	Actions:
	for =: Reduce r67

State 521 = goto(394, BLOCK) 
	IFB -> mystime LOGICAL du { BLOCK . }

	Actions:
	for }: Shift s634

State 522 = goto(394, SN) copy of State 423

State 523 = goto(394, N) copy of State 4

State 524 = goto(394, IN) copy of State 5

State 525 = goto(394, scriptum) copy of State 64

State 526 = goto(394, OUT) copy of State 6

State 527 = goto(394, revelio) copy of State 65

State 528 = goto(394, DECL) copy of State 7

State 529 = goto(394, declaro) copy of State 53

State 530 = goto(394, UNARY) copy of State 8

State 531 = goto(394, ascendo) copy of State 62

State 532 = goto(394, descendo) copy of State 63

State 533 = goto(394, ASSIGN) copy of State 9

State 534 = goto(394, LHS) copy of State 48

State 535 = goto(394, variable) copy of State 83

State 536 = goto(394, IFBLOCK) copy of State 10

State 537 = goto(394, IFB) copy of State 13

State 538 = goto(394, mystime) copy of State 14

State 539 = goto(394, FORBLOCK) copy of State 11

State 540 = goto(394, forculus) copy of State 18

State 541 = goto(394, WHILEBLOCK) copy of State 12

State 542 = goto(394, whilegardium) copy of State 23

State 543 = goto(410, )) 
	R -> ( EXPR ) .
	FACTOR -> ( EXPR ) .

	Actions:
	for ): Reduce r47
	for +: Reduce r47
	for orus: Reduce r64
	for ==: Reduce r64
	for andus: Reduce r64
	for tu: Reduce r47
	for :: Reduce r47
	for !=: Reduce r64
	for du: Reduce r47
	for ;: Reduce r47
	for <=: Reduce r64
	for ?: Reduce r64
	for >=: Reduce r64
	for %: Reduce r47
	for <: Reduce r64
	for >: Reduce r64
	for notus: Reduce r64
	for -: Reduce r47
	for /: Reduce r47
	for *: Reduce r47

State 544 = goto(410, NOP) copy of State 127

State 545 = goto(410, +) copy of State 29

State 546 = goto(410, -) copy of State 30

State 547 = goto(410, %) copy of State 31

State 548 = goto(421, BLOCK) 
	ELIFBC -> turntime LOGICAL du { BLOCK . }

	Actions:
	for }: Shift s635

State 549 = goto(421, SN) copy of State 423

State 550 = goto(421, N) copy of State 4

State 551 = goto(421, IN) copy of State 5

State 552 = goto(421, scriptum) copy of State 64

State 553 = goto(421, OUT) copy of State 6

State 554 = goto(421, revelio) copy of State 65

State 555 = goto(421, DECL) copy of State 7

State 556 = goto(421, declaro) copy of State 53

State 557 = goto(421, UNARY) copy of State 8

State 558 = goto(421, ascendo) copy of State 62

State 559 = goto(421, descendo) copy of State 63

State 560 = goto(421, ASSIGN) copy of State 9

State 561 = goto(421, LHS) copy of State 48

State 562 = goto(421, variable) copy of State 83

State 563 = goto(421, IFBLOCK) copy of State 10

State 564 = goto(421, IFB) copy of State 13

State 565 = goto(421, mystime) copy of State 14

State 566 = goto(421, FORBLOCK) copy of State 11

State 567 = goto(421, forculus) copy of State 18

State 568 = goto(421, WHILEBLOCK) copy of State 12

State 569 = goto(421, whilegardium) copy of State 23

State 570 = goto(422, }) 
	ELSEB -> returntime du { BLOCK } .

	Actions:
	for ;: Reduce r20

State 571 = goto(423, N) copy of State 71

State 572 = goto(423, IN) copy of State 5

State 573 = goto(423, scriptum) copy of State 64

State 574 = goto(423, OUT) copy of State 6

State 575 = goto(423, revelio) copy of State 65

State 576 = goto(423, DECL) copy of State 7

State 577 = goto(423, declaro) copy of State 53

State 578 = goto(423, UNARY) copy of State 8

State 579 = goto(423, ascendo) copy of State 62

State 580 = goto(423, descendo) copy of State 63

State 581 = goto(423, ASSIGN) copy of State 9

State 582 = goto(423, LHS) copy of State 48

State 583 = goto(423, variable) copy of State 83

State 584 = goto(423, IFBLOCK) copy of State 10

State 585 = goto(423, IFB) copy of State 13

State 586 = goto(423, mystime) copy of State 14

State 587 = goto(423, FORBLOCK) copy of State 11

State 588 = goto(423, forculus) copy of State 18

State 589 = goto(423, WHILEBLOCK) copy of State 12

State 590 = goto(423, whilegardium) copy of State 23

State 591 = goto(444, du) 
	FORBLOCK -> forculus FFROM tu FTO du . { BLOCK }

	Actions:
	for {: Shift s636

State 592 = goto(448, NOP) copy of State 127

State 593 = goto(448, +) copy of State 29

State 594 = goto(448, -) copy of State 30

State 595 = goto(448, %) copy of State 31

State 596 = goto(469, )) 
	FACTOR -> ( EXPR ) .

	Actions:
	for ): Reduce r47
	for +: Reduce r47
	for /: Reduce r47
	for tu: Reduce r47
	for :: Reduce r47
	for du: Reduce r47
	for ;: Reduce r47
	for %: Reduce r47
	for -: Reduce r47
	for *: Reduce r47

State 597 = goto(469, NOP) copy of State 127

State 598 = goto(469, +) copy of State 29

State 599 = goto(469, -) copy of State 30

State 600 = goto(469, %) copy of State 31

State 601 = goto(485, BLOCK) 
	WHILEBLOCK -> whilegardium LOGICAL du { BLOCK . }

	Actions:
	for }: Shift s637

State 602 = goto(485, SN) copy of State 423

State 603 = goto(485, N) copy of State 4

State 604 = goto(485, IN) copy of State 5

State 605 = goto(485, scriptum) copy of State 64

State 606 = goto(485, OUT) copy of State 6

State 607 = goto(485, revelio) copy of State 65

State 608 = goto(485, DECL) copy of State 7

State 609 = goto(485, declaro) copy of State 53

State 610 = goto(485, UNARY) copy of State 8

State 611 = goto(485, ascendo) copy of State 62

State 612 = goto(485, descendo) copy of State 63

State 613 = goto(485, ASSIGN) copy of State 9

State 614 = goto(485, LHS) copy of State 48

State 615 = goto(485, variable) copy of State 83

State 616 = goto(485, IFBLOCK) copy of State 10

State 617 = goto(485, IFB) copy of State 13

State 618 = goto(485, mystime) copy of State 14

State 619 = goto(485, FORBLOCK) copy of State 11

State 620 = goto(485, forculus) copy of State 18

State 621 = goto(485, WHILEBLOCK) copy of State 12

State 622 = goto(485, whilegardium) copy of State 23

State 623 = goto(486, :) 
	TERNARY -> tribus LOGICAL ? OPTION : . OPTION
	OPTION -> . EDT
	EDT -> . DT
	DT -> . number
	DT -> . char
	DT -> . string
	EDT -> . variable
	OPTION -> . EXPR
	EXPR -> . SS
	SS -> . SS + TSV
	SS -> . TSV
	TSV -> . string
	TSV -> . variable
	EXPR -> . EXPR NOP TERM
	EXPR -> . TERM
	TERM -> . TERM FOP FACTOR
	TERM -> . FACTOR
	FACTOR -> . TNV
	TNV -> . number
	TNV -> . variable
	FACTOR -> . ( EXPR )
	EXPR -> . LOGICAL
	LOGICAL -> . LOGICAL LOP ER
	LOGICAL -> . ER
	ER -> . ER ROP R
	ER -> . R
	R -> . ( LOGICAL )
	R -> . EDT
	R -> . ( EXPR )

	Actions:
	for OPTION: Shift s638
	for EDT: Shift s487
	for DT: Shift s68
	for number: Shift s246
	for char: Shift s69
	for string: Shift s248
	for variable: Shift s249
	for EXPR: Shift s493
	for SS: Shift s26
	for TSV: Shift s27
	for TERM: Shift s28
	for FACTOR: Shift s32
	for TNV: Shift s162
	for (: Shift s35
	for LOGICAL: Shift s36
	for ER: Shift s37
	for R: Shift s41

State 624 = goto(493, NOP) copy of State 127

State 625 = goto(493, +) copy of State 29

State 626 = goto(493, -) copy of State 30

State 627 = goto(493, %) copy of State 31

State 628 = goto(516, DDT) 
	DARRAY -> arraygo [ TNV ] DDT .

	Actions:
	for variable: Reduce r86

State 629 = goto(516, incantum) copy of State 57

State 630 = goto(516, dublatum) copy of State 58

State 631 = goto(516, charmax) copy of State 59

State 632 = goto(516, stringo) copy of State 60

State 633 = goto(517, ]) 
	ARRAYELEM -> variable [ TNV ] .

	Actions:
	for ;: Reduce r76

State 634 = goto(521, }) 
	IFB -> mystime LOGICAL du { BLOCK } .

	Actions:
	for ;: Reduce r16
	for turntime: Reduce r16
	for returntime: Reduce r16

State 635 = goto(548, }) 
	ELIFBC -> turntime LOGICAL du { BLOCK } .

	Actions:
	for ;: Reduce r19
	for turntime: Reduce r19
	for returntime: Reduce r19

State 636 = goto(591, {) 
	FORBLOCK -> forculus FFROM tu FTO du { . BLOCK }
	BLOCK -> . SN
	SN -> . SN N ;
	SN -> . N ;
	N -> . IN
	IN -> . scriptum INOPTIONS
	N -> . OUT
	OUT -> . revelio OUTOPTIONS
	N -> . DECL
	DECL -> . declaro EDDT SV
	N -> . UNARY
	UNARY -> . ascendo variable
	UNARY -> . descendo variable
	N -> . ASSIGN
	ASSIGN -> . LHS = RHS
	LHS -> . variable
	LHS -> . variable [ TNV ]
	N -> . IFBLOCK
	IFBLOCK -> . IFB ELIFB ELSEB
	IFB -> . mystime LOGICAL du { BLOCK }
	IFBLOCK -> . IFB ELIFB
	IFBLOCK -> . IFB ELSEB
	IFBLOCK -> . IFB
	N -> . FORBLOCK
	FORBLOCK -> . forculus FFROM tu FTO du { BLOCK }
	N -> . WHILEBLOCK
	WHILEBLOCK -> . whilegardium LOGICAL du { BLOCK }

	Actions:
	for BLOCK: Shift s655
	for SN: Shift s423
	for N: Shift s4
	for IN: Shift s5
	for scriptum: Shift s64
	for OUT: Shift s6
	for revelio: Shift s65
	for DECL: Shift s7
	for declaro: Shift s53
	for UNARY: Shift s8
	for ascendo: Shift s62
	for descendo: Shift s63
	for ASSIGN: Shift s9
	for LHS: Shift s48
	for variable: Shift s83
	for IFBLOCK: Shift s10
	for IFB: Shift s13
	for mystime: Shift s14
	for FORBLOCK: Shift s11
	for forculus: Shift s18
	for WHILEBLOCK: Shift s12
	for whilegardium: Shift s23

State 637 = goto(601, }) 
	WHILEBLOCK -> whilegardium LOGICAL du { BLOCK } .

	Actions:
	for ;: Reduce r29

State 638 = goto(623, OPTION) 
	TERNARY -> tribus LOGICAL ? OPTION : OPTION .

	Actions:
	for ;: Reduce r31

State 639 = goto(623, EDT) copy of State 487

State 640 = goto(623, DT) copy of State 68

State 641 = goto(623, number) copy of State 246

State 642 = goto(623, char) copy of State 69

State 643 = goto(623, string) copy of State 248

State 644 = goto(623, variable) copy of State 249

State 645 = goto(623, EXPR) copy of State 493

State 646 = goto(623, SS) copy of State 26

State 647 = goto(623, TSV) copy of State 27

State 648 = goto(623, TERM) copy of State 28

State 649 = goto(623, FACTOR) copy of State 32

State 650 = goto(623, TNV) copy of State 162

State 651 = goto(623, () copy of State 35

State 652 = goto(623, LOGICAL) copy of State 36

State 653 = goto(623, ER) copy of State 37

State 654 = goto(623, R) copy of State 41

State 655 = goto(636, BLOCK) 
	FORBLOCK -> forculus FFROM tu FTO du { BLOCK . }

	Actions:
	for }: Shift s677

State 656 = goto(636, SN) copy of State 423

State 657 = goto(636, N) copy of State 4

State 658 = goto(636, IN) copy of State 5

State 659 = goto(636, scriptum) copy of State 64

State 660 = goto(636, OUT) copy of State 6

State 661 = goto(636, revelio) copy of State 65

State 662 = goto(636, DECL) copy of State 7

State 663 = goto(636, declaro) copy of State 53

State 664 = goto(636, UNARY) copy of State 8

State 665 = goto(636, ascendo) copy of State 62

State 666 = goto(636, descendo) copy of State 63

State 667 = goto(636, ASSIGN) copy of State 9

State 668 = goto(636, LHS) copy of State 48

State 669 = goto(636, variable) copy of State 83

State 670 = goto(636, IFBLOCK) copy of State 10

State 671 = goto(636, IFB) copy of State 13

State 672 = goto(636, mystime) copy of State 14

State 673 = goto(636, FORBLOCK) copy of State 11

State 674 = goto(636, forculus) copy of State 18

State 675 = goto(636, WHILEBLOCK) copy of State 12

State 676 = goto(636, whilegardium) copy of State 23

State 677 = goto(655, }) 
	FORBLOCK -> forculus FFROM tu FTO du { BLOCK } .

	Actions:
	for ;: Reduce r21

